

-- =============================================
-- Author:		
-- Create date: 2015-10-28
-- Description:	Procedura merge'ująca w schemacie emcs2.
-- =============================================

CREATE PROCEDURE [emcs2].[MergeTableFromStageODS] (@TableName VARCHAR(50) = NULL)
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @Merged BIT = 0;

	IF (@TableName IS NULL) BEGIN
		;THROW 51001, 'Nie wskazano nazwy tabeli w parametrze @TableName procedury.', 0;
	END

	IF @TableName = 'AIS_VERIFICATIONS' BEGIN
		MERGE INTO emcs2.AIS_VERIFICATIONS AS tgt
		USING [WI_StageODS].emcs2.AIS_VERIFICATIONS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.CREATE_DATE=src.CREATE_DATE, tgt.MODIFIED_DATE=src.MODIFIED_DATE, tgt.LRN=src.LRN, tgt.ZCP_MRN=src.ZCP_MRN, tgt.QUERY_MSG_ID=src.QUERY_MSG_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, CREATE_DATE, MODIFIED_DATE, LRN, ZCP_MRN, QUERY_MSG_ID)
		VALUES (src.ID, src.CREATE_DATE, src.MODIFIED_DATE, src.LRN, src.ZCP_MRN, src.QUERY_MSG_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'AIS_VERIFICATIONS_MVMT' BEGIN
		MERGE INTO emcs2.AIS_VERIFICATIONS_MVMT AS tgt
		USING [WI_StageODS].emcs2.AIS_VERIFICATIONS_MVMT AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.CREATE_DATE=src.CREATE_DATE, tgt.MODIFIED_DATE=src.MODIFIED_DATE, tgt.AIS_VERIFICATION_ID=src.AIS_VERIFICATION_ID, tgt.VERIFICATION_MSG_ID=src.VERIFICATION_MSG_ID, tgt.VERIFICATION_RESULT=src.VERIFICATION_RESULT, tgt.VERIFICATION_ARC=src.VERIFICATION_ARC, tgt.VERIFICATION_MVMT_ID=src.VERIFICATION_MVMT_ID, tgt.CORRECTION_MSG_ID=src.CORRECTION_MSG_ID, tgt.CORRECTION_ARC=src.CORRECTION_ARC, tgt.CORRECTION_MVMT_ID=src.CORRECTION_MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, CREATE_DATE, MODIFIED_DATE, AIS_VERIFICATION_ID, VERIFICATION_MSG_ID, VERIFICATION_RESULT, VERIFICATION_ARC, VERIFICATION_MVMT_ID, CORRECTION_MSG_ID, CORRECTION_ARC, CORRECTION_MVMT_ID)
		VALUES (src.ID, src.CREATE_DATE, src.MODIFIED_DATE, src.AIS_VERIFICATION_ID, src.VERIFICATION_MSG_ID, src.VERIFICATION_RESULT, src.VERIFICATION_ARC, src.VERIFICATION_MVMT_ID, src.CORRECTION_MSG_ID, src.CORRECTION_ARC, src.CORRECTION_MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'DICTIONARIES' BEGIN
		MERGE INTO emcs2.DICTIONARIES AS tgt
		USING [WI_StageODS].emcs2.DICTIONARIES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.NAME=src.NAME, tgt.DESCRIPTION=src.DESCRIPTION
		WHEN NOT MATCHED
		THEN INSERT (ID, NAME, DESCRIPTION)
		VALUES (src.ID, src.NAME, src.DESCRIPTION);
		SET @Merged = 1;
	END

	IF @TableName = 'DICTIONARY_VALUES' BEGIN
		MERGE INTO emcs2.DICTIONARY_VALUES AS tgt
		USING [WI_StageODS].emcs2.DICTIONARY_VALUES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.CODE=src.CODE, tgt.DESCRIPTION=src.DESCRIPTION, tgt.DESCRIPTION_LANG_CODE=src.DESCRIPTION_LANG_CODE, tgt.VALID_FROM=src.VALID_FROM, tgt.VALID_TO=src.VALID_TO, tgt.DICT_ID=src.DICT_ID, tgt.ACTION_IDENTIFIER=src.ACTION_IDENTIFIER, tgt.INVALIDATE_ACTION_IDENTIFIER=src.INVALIDATE_ACTION_IDENTIFIER
		WHEN NOT MATCHED
		THEN INSERT (ID, CODE, DESCRIPTION, DESCRIPTION_LANG_CODE, VALID_FROM, VALID_TO, DICT_ID, ACTION_IDENTIFIER, INVALIDATE_ACTION_IDENTIFIER)
		VALUES (src.ID, src.CODE, src.DESCRIPTION, src.DESCRIPTION_LANG_CODE, src.VALID_FROM, src.VALID_TO, src.DICT_ID, src.ACTION_IDENTIFIER, src.INVALIDATE_ACTION_IDENTIFIER);
		SET @Merged = 1;
	END

	IF @TableName = 'ECS_DECL_VERIFY_RESULTS' BEGIN
		MERGE INTO emcs2.ECS_DECL_VERIFY_RESULTS AS tgt
		USING [WI_StageODS].emcs2.ECS_DECL_VERIFY_RESULTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ECSD_ID=src.ECSD_ID, tgt.ITEM_NUMBER=src.ITEM_NUMBER, tgt.ARC=src.ARC, tgt.MVMT_PRODUCT_NUMBER=src.MVMT_PRODUCT_NUMBER, tgt.MVMT_PRODUCT_ID=src.MVMT_PRODUCT_ID, tgt.ERROR_CODE=src.ERROR_CODE, tgt.ERROR_DESCRIPTION=src.ERROR_DESCRIPTION, tgt.DIAGNOSIS_CODE=src.DIAGNOSIS_CODE
		WHEN NOT MATCHED
		THEN INSERT (ID, ECSD_ID, ITEM_NUMBER, ARC, MVMT_PRODUCT_NUMBER, MVMT_PRODUCT_ID, ERROR_CODE, ERROR_DESCRIPTION, DIAGNOSIS_CODE)
		VALUES (src.ID, src.ECSD_ID, src.ITEM_NUMBER, src.ARC, src.MVMT_PRODUCT_NUMBER, src.MVMT_PRODUCT_ID, src.ERROR_CODE, src.ERROR_DESCRIPTION, src.DIAGNOSIS_CODE);
		SET @Merged = 1;
	END

	IF @TableName = 'ECS_DECLARATION_MVMTS' BEGIN
		MERGE INTO emcs2.ECS_DECLARATION_MVMTS AS tgt
		USING [WI_StageODS].emcs2.ECS_DECLARATION_MVMTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ECSD_ID=src.ECSD_ID, tgt.ARC=src.ARC, tgt.SEQUENCE_NUMBER=src.SEQUENCE_NUMBER
		WHEN NOT MATCHED
		THEN INSERT (ID, ECSD_ID, ARC, SEQUENCE_NUMBER)
		VALUES (src.ID, src.ECSD_ID, src.ARC, src.SEQUENCE_NUMBER);
		SET @Merged = 1;
	END

	IF @TableName = 'ECS_DECLARATIONS' BEGIN
		MERGE INTO emcs2.ECS_DECLARATIONS AS tgt
		USING [WI_StageODS].emcs2.ECS_DECLARATIONS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.MRN=src.MRN, tgt.STATUS=src.STATUS
		WHEN NOT MATCHED
		THEN INSERT (ID, MRN, STATUS)
		VALUES (src.ID, src.MRN, src.STATUS);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_ACO' BEGIN
		MERGE INTO emcs2.EMCS_ACO AS tgt
		USING [WI_StageODS].emcs2.EMCS_ACO AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.WORKFLOW_STATUS=src.WORKFLOW_STATUS, tgt.REQUEST_TYPE=src.REQUEST_TYPE, tgt.DEADLINE_FOR_RESULTS=src.DEADLINE_FOR_RESULTS, tgt.STATUS=src.STATUS, tgt.FOLLOW_UP_CORRELATION_ID=src.FOLLOW_UP_CORRELATION_ID, tgt.DATE_OF_ISSUANCE=src.DATE_OF_ISSUANCE, tgt.SENDER_MEMBER_STATE_CODE=src.SENDER_MEMBER_STATE_CODE, tgt.SENDER_OFFICE_REF_NUM=src.SENDER_OFFICE_REF_NUM, tgt.SENDER_OFFICER=src.SENDER_OFFICER, tgt.ADDRESSEE_MEMBER_STATE_CODE=src.ADDRESSEE_MEMBER_STATE_CODE, tgt.ADDRESSEE_OFFICE_REF_NUM=src.ADDRESSEE_OFFICE_REF_NUM, tgt.ADDRESSEE_OFFICER=src.ADDRESSEE_OFFICER, tgt.WARNING_FLAG=src.WARNING_FLAG, tgt.HAS_ATTACHMENTS=src.HAS_ATTACHMENTS, tgt.HISTORY_REQUEST_SCOPE=src.HISTORY_REQUEST_SCOPE, tgt.HISTORY_SCOPE_DATE=src.HISTORY_SCOPE_DATE, tgt.ARCS=src.ARCS, tgt.MOVEMENTS=src.MOVEMENTS, tgt.IE721_MESSAGE_ID=src.IE721_MESSAGE_ID, tgt.IE820_MESSAGE_ID=src.IE820_MESSAGE_ID, tgt.IE867_MESSAGE_ID=src.IE867_MESSAGE_ID, tgt.IE868_DEL_MESSAGE_ID=src.IE868_DEL_MESSAGE_ID, tgt.IE868_REF_MESSAGE_ID=src.IE868_REF_MESSAGE_ID, tgt.IE869_MESSAGE_ID=src.IE869_MESSAGE_ID, tgt.CREATE_DATE=src.CREATE_DATE, tgt.CREATE_BY=src.CREATE_BY, tgt.CHANGE_DATE=src.CHANGE_DATE, tgt.CHANGE_BY=src.CHANGE_BY, tgt.VERSION=src.VERSION, tgt.IE722_MESSAGE_ID=src.IE722_MESSAGE_ID, tgt.IE723_MESSAGE_ID=src.IE723_MESSAGE_ID, tgt.IE724_MESSAGE_ID=src.IE724_MESSAGE_ID, tgt.IE725_MESSAGE_ID=src.IE725_MESSAGE_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, WORKFLOW_STATUS, REQUEST_TYPE, DEADLINE_FOR_RESULTS, STATUS, FOLLOW_UP_CORRELATION_ID, DATE_OF_ISSUANCE, SENDER_MEMBER_STATE_CODE, SENDER_OFFICE_REF_NUM, SENDER_OFFICER, ADDRESSEE_MEMBER_STATE_CODE, ADDRESSEE_OFFICE_REF_NUM, ADDRESSEE_OFFICER, WARNING_FLAG, HAS_ATTACHMENTS, HISTORY_REQUEST_SCOPE, HISTORY_SCOPE_DATE, ARCS, MOVEMENTS, IE721_MESSAGE_ID, IE820_MESSAGE_ID, IE867_MESSAGE_ID, IE868_DEL_MESSAGE_ID, IE868_REF_MESSAGE_ID, IE869_MESSAGE_ID, CREATE_DATE, CREATE_BY, CHANGE_DATE, CHANGE_BY, VERSION, IE722_MESSAGE_ID, IE723_MESSAGE_ID, IE724_MESSAGE_ID, IE725_MESSAGE_ID)
		VALUES (src.ID, src.WORKFLOW_STATUS, src.REQUEST_TYPE, src.DEADLINE_FOR_RESULTS, src.STATUS, src.FOLLOW_UP_CORRELATION_ID, src.DATE_OF_ISSUANCE, src.SENDER_MEMBER_STATE_CODE, src.SENDER_OFFICE_REF_NUM, src.SENDER_OFFICER, src.ADDRESSEE_MEMBER_STATE_CODE, src.ADDRESSEE_OFFICE_REF_NUM, src.ADDRESSEE_OFFICER, src.WARNING_FLAG, src.HAS_ATTACHMENTS, src.HISTORY_REQUEST_SCOPE, src.HISTORY_SCOPE_DATE, src.ARCS, src.MOVEMENTS, src.IE721_MESSAGE_ID, src.IE820_MESSAGE_ID, src.IE867_MESSAGE_ID, src.IE868_DEL_MESSAGE_ID, src.IE868_REF_MESSAGE_ID, src.IE869_MESSAGE_ID, src.CREATE_DATE, src.CREATE_BY, src.CHANGE_DATE, src.CHANGE_BY, src.VERSION, src.IE722_MESSAGE_ID, src.IE723_MESSAGE_ID, src.IE724_MESSAGE_ID, src.IE725_MESSAGE_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_ACO_MESSAGE_RELATIONS' BEGIN
		MERGE INTO emcs2.EMCS_ACO_MESSAGE_RELATIONS AS tgt
		USING [WI_StageODS].emcs2.EMCS_ACO_MESSAGE_RELATIONS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ACOM1_ID=src.ACOM1_ID, tgt.ACOM2_ID=src.ACOM2_ID, tgt.RELATION_TYPE=src.RELATION_TYPE
		WHEN NOT MATCHED
		THEN INSERT (ID, ACOM1_ID, ACOM2_ID, RELATION_TYPE)
		VALUES (src.ID, src.ACOM1_ID, src.ACOM2_ID, src.RELATION_TYPE);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_ACO_MESSAGES' BEGIN
		MERGE INTO emcs2.EMCS_ACO_MESSAGES AS tgt
		USING [WI_StageODS].emcs2.EMCS_ACO_MESSAGES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ACO_ID=src.ACO_ID, tgt.PSIN_ID=src.PSIN_ID, tgt.TYPE=src.TYPE, tgt.BODY=src.BODY, tgt.STATUS=src.STATUS, tgt.CREATE_DATE=src.CREATE_DATE, tgt.CREATE_BY=src.CREATE_BY, tgt.CHANGE_DATE=src.CHANGE_DATE, tgt.CHANGE_BY=src.CHANGE_BY, tgt.VERSION=src.VERSION, tgt.MSG_VERSION=src.MSG_VERSION
		WHEN NOT MATCHED
		THEN INSERT (ID, ACO_ID, PSIN_ID, TYPE, BODY, STATUS, CREATE_DATE, CREATE_BY, CHANGE_DATE, CHANGE_BY, VERSION, MSG_VERSION)
		VALUES (src.ID, src.ACO_ID, src.PSIN_ID, src.TYPE, src.BODY, src.STATUS, src.CREATE_DATE, src.CREATE_BY, src.CHANGE_DATE, src.CHANGE_BY, src.VERSION, src.MSG_VERSION);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_ACO_MOVEMENTS' BEGIN
		MERGE INTO emcs2.EMCS_ACO_MOVEMENTS AS tgt
		USING [WI_StageODS].emcs2.EMCS_ACO_MOVEMENTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ACO_ID=src.ACO_ID, tgt.ARC=src.ARC, tgt.SEQUENCE_NUMBER=src.SEQUENCE_NUMBER, tgt.MVMT_ID=src.MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, ACO_ID, ARC, SEQUENCE_NUMBER, MVMT_ID)
		VALUES (src.ID, src.ACO_ID, src.ARC, src.SEQUENCE_NUMBER, src.MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_ACO_OUTER_MESSAGES' BEGIN
		MERGE INTO emcs2.EMCS_ACO_OUTER_MESSAGES AS tgt
		USING [WI_StageODS].emcs2.EMCS_ACO_OUTER_MESSAGES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ACO_ID=src.ACO_ID, tgt.MESSAGE_ID=src.MESSAGE_ID, tgt.[TYPE]=src.[TYPE]
		WHEN NOT MATCHED
		THEN INSERT (ID, ACO_ID, MESSAGE_ID, [TYPE])
		VALUES (src.ID, src.ACO_ID, src.MESSAGE_ID, src.[TYPE]);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_ACO_PROCESS_INSTANCES' BEGIN
		MERGE INTO emcs2.EMCS_ACO_PROCESS_INSTANCES AS tgt
		USING [WI_StageODS].emcs2.EMCS_ACO_PROCESS_INSTANCES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ACO_ID=src.ACO_ID, tgt.PRIN_ID=src.PRIN_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, ACO_ID, PRIN_ID)
		VALUES (src.ID, src.ACO_ID, src.PRIN_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_ACO_READERS' BEGIN
		MERGE INTO emcs2.EMCS_ACO_READERS AS tgt
		USING [WI_StageODS].emcs2.EMCS_ACO_READERS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ACO_ID=src.ACO_ID, tgt.ROLE_ID=src.ROLE_ID, tgt.CREATE_DATE=src.CREATE_DATE, tgt.CREATE_BY=src.CREATE_BY
		WHEN NOT MATCHED
		THEN INSERT (ID, ACO_ID, ROLE_ID, CREATE_DATE, CREATE_BY)
		VALUES (src.ID, src.ACO_ID, src.ROLE_ID, src.CREATE_DATE, src.CREATE_BY);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_DOWN_DOWNSTREAM_MVMTS' BEGIN
		MERGE INTO emcs2.EMCS_DOWN_DOWNSTREAM_MVMTS AS tgt
		USING [WI_StageODS].emcs2.EMCS_DOWN_DOWNSTREAM_MVMTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.MVMT_ID=src.MVMT_ID, tgt.ARC=src.ARC
		WHEN NOT MATCHED
		THEN INSERT (ID, MVMT_ID, ARC)
		VALUES (src.ID, src.MVMT_ID, src.ARC);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_DOWN_MESSAGES' BEGIN
		MERGE INTO emcs2.EMCS_DOWN_MESSAGES AS tgt
		USING [WI_StageODS].emcs2.EMCS_DOWN_MESSAGES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.VERSION=src.VERSION, tgt.TYPE=src.TYPE, tgt.SENDER=src.SENDER, tgt.RECIPIENT=src.RECIPIENT, tgt.PREPARATION_TIMESTAMP=src.PREPARATION_TIMESTAMP, tgt.IDENTIFIER=src.IDENTIFIER, tgt.CORRELATION_IDENTIFIER=src.CORRELATION_IDENTIFIER, tgt.BODY=src.BODY, tgt.MVMT_ID=src.MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, VERSION, TYPE, SENDER, RECIPIENT, PREPARATION_TIMESTAMP, IDENTIFIER, CORRELATION_IDENTIFIER, BODY, MVMT_ID)
		VALUES (src.ID, src.VERSION, src.TYPE, src.SENDER, src.RECIPIENT, src.PREPARATION_TIMESTAMP, src.IDENTIFIER, src.CORRELATION_IDENTIFIER, src.BODY, src.MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_DOWN_MOVEMENTS' BEGIN
		MERGE INTO emcs2.EMCS_DOWN_MOVEMENTS AS tgt
		USING [WI_StageODS].emcs2.EMCS_DOWN_MOVEMENTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ARC=src.ARC, tgt.STATUS=src.STATUS, tgt.SEQUENCE_NUMBER=src.SEQUENCE_NUMBER, tgt.LRN=src.LRN, tgt.UPSTREAM_ARC=src.UPSTREAM_ARC, tgt.CONSIGNOR_MEMBER_STATE_CODE=src.CONSIGNOR_MEMBER_STATE_CODE, tgt.CONSIGNEE_MEMBER_STATE_CODE=src.CONSIGNEE_MEMBER_STATE_CODE, tgt.DATE_AND_TIME_OF_DISPATCH=src.DATE_AND_TIME_OF_DISPATCH, tgt.IS_TIME_OF_DISPATCH_SET=src.IS_TIME_OF_DISPATCH_SET, tgt.ORIGIN_TYPE_CODE=src.ORIGIN_TYPE_CODE, tgt.DESTINATION_TYPE_CODE=src.DESTINATION_TYPE_CODE, tgt.JOURNEY_TIME=src.JOURNEY_TIME, tgt.TRANSPORT_ARRANGEMENT_CODE=src.TRANSPORT_ARRANGEMENT_CODE, tgt.INVOICE_NUMBER=src.INVOICE_NUMBER, tgt.INVOICE_DATE=src.INVOICE_DATE, tgt.CONSIGNOR_EXCISE_NUMBER=src.CONSIGNOR_EXCISE_NUMBER, tgt.CONSIGNOR_NAME=src.CONSIGNOR_NAME, tgt.CONSIGNOR_STREET_NAME=src.CONSIGNOR_STREET_NAME, tgt.CONSIGNOR_STREET_NUMBER=src.CONSIGNOR_STREET_NUMBER, tgt.CONSIGNOR_POSTCODE=src.CONSIGNOR_POSTCODE, tgt.CONSIGNOR_CITY=src.CONSIGNOR_CITY, tgt.CONSIGNOR_LANG_CODE=src.CONSIGNOR_LANG_CODE, tgt.PLACEOFDISPATCH_EXCISE_NUMBER=src.PLACEOFDISPATCH_EXCISE_NUMBER, tgt.PLACEOFDISPATCH_NAME=src.PLACEOFDISPATCH_NAME, tgt.PLACEOFDISPATCH_STREET_NAME=src.PLACEOFDISPATCH_STREET_NAME, tgt.PLACEOFDISPATCH_STREET_NUMBER=src.PLACEOFDISPATCH_STREET_NUMBER, tgt.PLACEOFDISPATCH_POSTCODE=src.PLACEOFDISPATCH_POSTCODE, tgt.PLACEOFDISPATCH_CITY=src.PLACEOFDISPATCH_CITY, tgt.PLACEOFDISPATCH_LANG_CODE=src.PLACEOFDISPATCH_LANG_CODE, tgt.PLACEOFDISPATCH_OFFICE_REFNUM=src.PLACEOFDISPATCH_OFFICE_REFNUM, tgt.PLACEOFDISPATCH_CTR_OFF_REF=src.PLACEOFDISPATCH_CTR_OFF_REF, tgt.IMPORT_CUST_OFFICE_REFNUM=src.IMPORT_CUST_OFFICE_REFNUM, tgt.CONSIGNEE_IDENTIFICATION=src.CONSIGNEE_IDENTIFICATION, tgt.CONSIGNEE_NAME=src.CONSIGNEE_NAME, tgt.CONSIGNEE_STREET_NAME=src.CONSIGNEE_STREET_NAME, tgt.CONSIGNEE_STREET_NUMBER=src.CONSIGNEE_STREET_NUMBER, tgt.CONSIGNEE_POSTCODE=src.CONSIGNEE_POSTCODE, tgt.CONSIGNEE_CITY=src.CONSIGNEE_CITY, tgt.CONSIGNEE_LANG_CODE=src.CONSIGNEE_LANG_CODE, tgt.COMPL_CONSIGNEE_COUNTRY_CODE=src.COMPL_CONSIGNEE_COUNTRY_CODE, tgt.COMPL_CONSIGNEE_EXEMPTION_CERT=src.COMPL_CONSIGNEE_EXEMPTION_CERT, tgt.PLACEOFDELIVERY_IDENTIFICATION=src.PLACEOFDELIVERY_IDENTIFICATION, tgt.PLACEOFDELIVERY_NAME=src.PLACEOFDELIVERY_NAME, tgt.PLACEOFDELIVERY_STREET_NAME=src.PLACEOFDELIVERY_STREET_NAME, tgt.PLACEOFDELIVERY_STREET_NUMBER=src.PLACEOFDELIVERY_STREET_NUMBER, tgt.PLACEOFDELIVERY_POSTCODE=src.PLACEOFDELIVERY_POSTCODE, tgt.PLACEOFDELIVERY_CITY=src.PLACEOFDELIVERY_CITY, tgt.PLACEOFDELIVERY_LANG_CODE=src.PLACEOFDELIVERY_LANG_CODE, tgt.PLACEOFDELIVERY_OFFICE_REFNUM=src.PLACEOFDELIVERY_OFFICE_REFNUM, tgt.PLACEOFDELIVERY_CTR_OFFICE_REF=src.PLACEOFDELIVERY_CTR_OFFICE_REF, tgt.GUARANTOR_TYPE_CODE=src.GUARANTOR_TYPE_CODE, tgt.GUARANTOR1_EXCISE_NUMBER=src.GUARANTOR1_EXCISE_NUMBER, tgt.GUARANTOR1_NAME=src.GUARANTOR1_NAME, tgt.GUARANTOR1_STREET_NAME=src.GUARANTOR1_STREET_NAME, tgt.GUARANTOR1_STREET_NUMBER=src.GUARANTOR1_STREET_NUMBER, tgt.GUARANTOR1_POSTCODE=src.GUARANTOR1_POSTCODE, tgt.GUARANTOR1_CITY=src.GUARANTOR1_CITY, tgt.GUARANTOR1_VAT_NUMBER=src.GUARANTOR1_VAT_NUMBER, tgt.GUARANTOR1_LANG_CODE=src.GUARANTOR1_LANG_CODE, tgt.GUARANTOR2_EXCISE_NUMBER=src.GUARANTOR2_EXCISE_NUMBER, tgt.GUARANTOR2_NAME=src.GUARANTOR2_NAME, tgt.GUARANTOR2_STREET_NAME=src.GUARANTOR2_STREET_NAME, tgt.GUARANTOR2_STREET_NUMBER=src.GUARANTOR2_STREET_NUMBER, tgt.GUARANTOR2_POSTCODE=src.GUARANTOR2_POSTCODE, tgt.GUARANTOR2_CITY=src.GUARANTOR2_CITY, tgt.GUARANTOR2_VAT_NUMBER=src.GUARANTOR2_VAT_NUMBER, tgt.GUARANTOR2_LANG_CODE=src.GUARANTOR2_LANG_CODE, tgt.TRANSPORT_MODE=src.TRANSPORT_MODE, tgt.TRANSPORT_ARRANGER_VAT_NUMBER=src.TRANSPORT_ARRANGER_VAT_NUMBER, tgt.TRANSPORT_ARRANGER_NAME=src.TRANSPORT_ARRANGER_NAME, tgt.TRANSPORT_ARRANGER_STREET_NAME=src.TRANSPORT_ARRANGER_STREET_NAME, tgt.TRANSPORT_ARRANGER_STREET_NUMB=src.TRANSPORT_ARRANGER_STREET_NUMB, tgt.TRANSPORT_ARRANGER_POSTCODE=src.TRANSPORT_ARRANGER_POSTCODE, tgt.TRANSPORT_ARRANGER_CITY=src.TRANSPORT_ARRANGER_CITY, tgt.TRANSPORT_ARRANGER_LANG_CODE=src.TRANSPORT_ARRANGER_LANG_CODE, tgt.FIRST_TRANSPORTER_VAT_NUMBER=src.FIRST_TRANSPORTER_VAT_NUMBER, tgt.FIRST_TRANSPORTER_NAME=src.FIRST_TRANSPORTER_NAME, tgt.FIRST_TRANSPORTER_STREET_NAME=src.FIRST_TRANSPORTER_STREET_NAME, tgt.FIRST_TRANSPORTER_STREET_NUMB=src.FIRST_TRANSPORTER_STREET_NUMB, tgt.FIRST_TRANSPORTER_POSTCODE=src.FIRST_TRANSPORTER_POSTCODE, tgt.FIRST_TRANSPORTER_CITY=src.FIRST_TRANSPORTER_CITY, tgt.FIRST_TRANSPORTER_LANG_CODE=src.FIRST_TRANSPORTER_LANG_CODE
		WHEN NOT MATCHED
		THEN INSERT (ID, ARC, STATUS, SEQUENCE_NUMBER, LRN, UPSTREAM_ARC, CONSIGNOR_MEMBER_STATE_CODE, CONSIGNEE_MEMBER_STATE_CODE, DATE_AND_TIME_OF_DISPATCH, IS_TIME_OF_DISPATCH_SET, ORIGIN_TYPE_CODE, DESTINATION_TYPE_CODE, JOURNEY_TIME, TRANSPORT_ARRANGEMENT_CODE, INVOICE_NUMBER, INVOICE_DATE, CONSIGNOR_EXCISE_NUMBER, CONSIGNOR_NAME, CONSIGNOR_STREET_NAME, CONSIGNOR_STREET_NUMBER, CONSIGNOR_POSTCODE, CONSIGNOR_CITY, CONSIGNOR_LANG_CODE, PLACEOFDISPATCH_EXCISE_NUMBER, PLACEOFDISPATCH_NAME, PLACEOFDISPATCH_STREET_NAME, PLACEOFDISPATCH_STREET_NUMBER, PLACEOFDISPATCH_POSTCODE, PLACEOFDISPATCH_CITY, PLACEOFDISPATCH_LANG_CODE, PLACEOFDISPATCH_OFFICE_REFNUM, PLACEOFDISPATCH_CTR_OFF_REF, IMPORT_CUST_OFFICE_REFNUM, CONSIGNEE_IDENTIFICATION, CONSIGNEE_NAME, CONSIGNEE_STREET_NAME, CONSIGNEE_STREET_NUMBER, CONSIGNEE_POSTCODE, CONSIGNEE_CITY, CONSIGNEE_LANG_CODE, COMPL_CONSIGNEE_COUNTRY_CODE, COMPL_CONSIGNEE_EXEMPTION_CERT, PLACEOFDELIVERY_IDENTIFICATION, PLACEOFDELIVERY_NAME, PLACEOFDELIVERY_STREET_NAME, PLACEOFDELIVERY_STREET_NUMBER, PLACEOFDELIVERY_POSTCODE, PLACEOFDELIVERY_CITY, PLACEOFDELIVERY_LANG_CODE, PLACEOFDELIVERY_OFFICE_REFNUM, PLACEOFDELIVERY_CTR_OFFICE_REF, GUARANTOR_TYPE_CODE, GUARANTOR1_EXCISE_NUMBER, GUARANTOR1_NAME, GUARANTOR1_STREET_NAME, GUARANTOR1_STREET_NUMBER, GUARANTOR1_POSTCODE, GUARANTOR1_CITY, GUARANTOR1_VAT_NUMBER, GUARANTOR1_LANG_CODE, GUARANTOR2_EXCISE_NUMBER, GUARANTOR2_NAME, GUARANTOR2_STREET_NAME, GUARANTOR2_STREET_NUMBER, GUARANTOR2_POSTCODE, GUARANTOR2_CITY, GUARANTOR2_VAT_NUMBER, GUARANTOR2_LANG_CODE, TRANSPORT_MODE, TRANSPORT_ARRANGER_VAT_NUMBER, TRANSPORT_ARRANGER_NAME, TRANSPORT_ARRANGER_STREET_NAME, TRANSPORT_ARRANGER_STREET_NUMB, TRANSPORT_ARRANGER_POSTCODE, TRANSPORT_ARRANGER_CITY, TRANSPORT_ARRANGER_LANG_CODE, FIRST_TRANSPORTER_VAT_NUMBER, FIRST_TRANSPORTER_NAME, FIRST_TRANSPORTER_STREET_NAME, FIRST_TRANSPORTER_STREET_NUMB, FIRST_TRANSPORTER_POSTCODE, FIRST_TRANSPORTER_CITY, FIRST_TRANSPORTER_LANG_CODE)
		VALUES (src.ID, src.ARC, src.STATUS, src.SEQUENCE_NUMBER, src.LRN, src.UPSTREAM_ARC, src.CONSIGNOR_MEMBER_STATE_CODE, src.CONSIGNEE_MEMBER_STATE_CODE, src.DATE_AND_TIME_OF_DISPATCH, src.IS_TIME_OF_DISPATCH_SET, src.ORIGIN_TYPE_CODE, src.DESTINATION_TYPE_CODE, src.JOURNEY_TIME, src.TRANSPORT_ARRANGEMENT_CODE, src.INVOICE_NUMBER, src.INVOICE_DATE, src.CONSIGNOR_EXCISE_NUMBER, src.CONSIGNOR_NAME, src.CONSIGNOR_STREET_NAME, src.CONSIGNOR_STREET_NUMBER, src.CONSIGNOR_POSTCODE, src.CONSIGNOR_CITY, src.CONSIGNOR_LANG_CODE, src.PLACEOFDISPATCH_EXCISE_NUMBER, src.PLACEOFDISPATCH_NAME, src.PLACEOFDISPATCH_STREET_NAME, src.PLACEOFDISPATCH_STREET_NUMBER, src.PLACEOFDISPATCH_POSTCODE, src.PLACEOFDISPATCH_CITY, src.PLACEOFDISPATCH_LANG_CODE, src.PLACEOFDISPATCH_OFFICE_REFNUM, src.PLACEOFDISPATCH_CTR_OFF_REF, src.IMPORT_CUST_OFFICE_REFNUM, src.CONSIGNEE_IDENTIFICATION, src.CONSIGNEE_NAME, src.CONSIGNEE_STREET_NAME, src.CONSIGNEE_STREET_NUMBER, src.CONSIGNEE_POSTCODE, src.CONSIGNEE_CITY, src.CONSIGNEE_LANG_CODE, src.COMPL_CONSIGNEE_COUNTRY_CODE, src.COMPL_CONSIGNEE_EXEMPTION_CERT, src.PLACEOFDELIVERY_IDENTIFICATION, src.PLACEOFDELIVERY_NAME, src.PLACEOFDELIVERY_STREET_NAME, src.PLACEOFDELIVERY_STREET_NUMBER, src.PLACEOFDELIVERY_POSTCODE, src.PLACEOFDELIVERY_CITY, src.PLACEOFDELIVERY_LANG_CODE, src.PLACEOFDELIVERY_OFFICE_REFNUM, src.PLACEOFDELIVERY_CTR_OFFICE_REF, src.GUARANTOR_TYPE_CODE, src.GUARANTOR1_EXCISE_NUMBER, src.GUARANTOR1_NAME, src.GUARANTOR1_STREET_NAME, src.GUARANTOR1_STREET_NUMBER, src.GUARANTOR1_POSTCODE, src.GUARANTOR1_CITY, src.GUARANTOR1_VAT_NUMBER, src.GUARANTOR1_LANG_CODE, src.GUARANTOR2_EXCISE_NUMBER, src.GUARANTOR2_NAME, src.GUARANTOR2_STREET_NAME, src.GUARANTOR2_STREET_NUMBER, src.GUARANTOR2_POSTCODE, src.GUARANTOR2_CITY, src.GUARANTOR2_VAT_NUMBER, src.GUARANTOR2_LANG_CODE, src.TRANSPORT_MODE, src.TRANSPORT_ARRANGER_VAT_NUMBER, src.TRANSPORT_ARRANGER_NAME, src.TRANSPORT_ARRANGER_STREET_NAME, src.TRANSPORT_ARRANGER_STREET_NUMB, src.TRANSPORT_ARRANGER_POSTCODE, src.TRANSPORT_ARRANGER_CITY, src.TRANSPORT_ARRANGER_LANG_CODE, src.FIRST_TRANSPORTER_VAT_NUMBER, src.FIRST_TRANSPORTER_NAME, src.FIRST_TRANSPORTER_STREET_NAME, src.FIRST_TRANSPORTER_STREET_NUMB, src.FIRST_TRANSPORTER_POSTCODE, src.FIRST_TRANSPORTER_CITY, src.FIRST_TRANSPORTER_LANG_CODE);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_DOWN_MVMT_PROD' BEGIN
		MERGE INTO emcs2.EMCS_DOWN_MVMT_PROD AS tgt
		USING [WI_StageODS].emcs2.EMCS_DOWN_MVMT_PROD AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.RECORD_UNIQUE_REFERENCE=src.RECORD_UNIQUE_REFERENCE, tgt.EXCISE_PRODUCT_CATEGORY=src.EXCISE_PRODUCT_CATEGORY, tgt.EXCISE_PRODUCT_CODE=src.EXCISE_PRODUCT_CODE, tgt.CN_CODE=src.CN_CODE, tgt.QUANTITY=src.QUANTITY, tgt.NET_WEIGHT=src.NET_WEIGHT, tgt.ALCOHOLIC_STRENGTH=src.ALCOHOLIC_STRENGTH, tgt.DEGREE_PLATO=src.DEGREE_PLATO, tgt.FISCAL_MARK=src.FISCAL_MARK, tgt.FISCAL_MARK_USED_FLAG=src.FISCAL_MARK_USED_FLAG, tgt.DESIGNATION_OF_ORIGIN=src.DESIGNATION_OF_ORIGIN, tgt.SIZE_OF_PRODUCER=src.SIZE_OF_PRODUCER, tgt.DENSITY=src.DENSITY, tgt.COMMERCIAL_DESCRIPTION=src.COMMERCIAL_DESCRIPTION, tgt.BRAND_NAME=src.BRAND_NAME, tgt.WINE_PRODUCT_CATEGORY=src.WINE_PRODUCT_CATEGORY, tgt.WINE_GROWING_ZONE_CODE=src.WINE_GROWING_ZONE_CODE, tgt.WINE_THIRD_COUNTRY_OF_ORIGIN=src.WINE_THIRD_COUNTRY_OF_ORIGIN, tgt.WINE_OTHER_INFORMATION=src.WINE_OTHER_INFORMATION, tgt.FISCAL_MARK_LANG_CODE=src.FISCAL_MARK_LANG_CODE, tgt.DESIGNATION_OF_ORIG_LANG_CODE=src.DESIGNATION_OF_ORIG_LANG_CODE, tgt.COMMERCIAL_DESC_LANG_CODE=src.COMMERCIAL_DESC_LANG_CODE, tgt.BRAND_NAME_LANG_CODE=src.BRAND_NAME_LANG_CODE, tgt.WINE_OTHER_INFO_LANG_CODE=src.WINE_OTHER_INFO_LANG_CODE, tgt.DELIVERED=src.DELIVERED, tgt.MVMT_ID=src.MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, RECORD_UNIQUE_REFERENCE, EXCISE_PRODUCT_CATEGORY, EXCISE_PRODUCT_CODE, CN_CODE, QUANTITY, NET_WEIGHT, ALCOHOLIC_STRENGTH, DEGREE_PLATO, FISCAL_MARK, FISCAL_MARK_USED_FLAG, DESIGNATION_OF_ORIGIN, SIZE_OF_PRODUCER, DENSITY, COMMERCIAL_DESCRIPTION, BRAND_NAME, WINE_PRODUCT_CATEGORY, WINE_GROWING_ZONE_CODE, WINE_THIRD_COUNTRY_OF_ORIGIN, WINE_OTHER_INFORMATION, FISCAL_MARK_LANG_CODE, DESIGNATION_OF_ORIG_LANG_CODE, COMMERCIAL_DESC_LANG_CODE, BRAND_NAME_LANG_CODE, WINE_OTHER_INFO_LANG_CODE, DELIVERED, MVMT_ID)
		VALUES (src.ID, src.RECORD_UNIQUE_REFERENCE, src.EXCISE_PRODUCT_CATEGORY, src.EXCISE_PRODUCT_CODE, src.CN_CODE, src.QUANTITY, src.NET_WEIGHT, src.ALCOHOLIC_STRENGTH, src.DEGREE_PLATO, src.FISCAL_MARK, src.FISCAL_MARK_USED_FLAG, src.DESIGNATION_OF_ORIGIN, src.SIZE_OF_PRODUCER, src.DENSITY, src.COMMERCIAL_DESCRIPTION, src.BRAND_NAME, src.WINE_PRODUCT_CATEGORY, src.WINE_GROWING_ZONE_CODE, src.WINE_THIRD_COUNTRY_OF_ORIGIN, src.WINE_OTHER_INFORMATION, src.FISCAL_MARK_LANG_CODE, src.DESIGNATION_OF_ORIG_LANG_CODE, src.COMMERCIAL_DESC_LANG_CODE, src.BRAND_NAME_LANG_CODE, src.WINE_OTHER_INFO_LANG_CODE, src.DELIVERED, src.MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_EXCISE_RATES' BEGIN
		MERGE INTO emcs2.EMCS_EXCISE_RATES AS tgt
		USING [WI_StageODS].emcs2.EMCS_EXCISE_RATES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.VALID_FROM=src.VALID_FROM, tgt.VALID_TO=src.VALID_TO, tgt.EXCISE_NUMBER_CODE=src.EXCISE_NUMBER_CODE, tgt.FISCAL_MARK=src.FISCAL_MARK, tgt.CN_CODE_FROM=src.CN_CODE_FROM, tgt.CN_CODE_TO=src.CN_CODE_TO, tgt.SIZE_OF_PRODUCER_FROM=src.SIZE_OF_PRODUCER_FROM, tgt.SIZE_OF_PRODUCER_TO=src.SIZE_OF_PRODUCER_TO, tgt.DENSITY_FROM=src.DENSITY_FROM, tgt.DENSITY_TO=src.DENSITY_TO, tgt.NOT_COLORED_AND_MARKED_OILS=src.NOT_COLORED_AND_MARKED_OILS, tgt.FUEL_TYPE=src.FUEL_TYPE, tgt.EXEMPTION_AMOUNT=src.EXEMPTION_AMOUNT, tgt.AMOUNT_RATE=src.AMOUNT_RATE, tgt.PERCENT_RATE=src.PERCENT_RATE, tgt.MINIMAL_RATE=src.MINIMAL_RATE, tgt.ALGORITHM_TYPE=src.ALGORITHM_TYPE, tgt.ADDITIONAL_UNIT=src.ADDITIONAL_UNIT, tgt.BIO_COMPONENT_RATE=src.BIO_COMPONENT_RATE, tgt.BIOFUEL_CONTENT_QUALITY=src.BIOFUEL_CONTENT_QUALITY, tgt.ALC_STRENGTH_FROM=src.ALC_STRENGTH_FROM, tgt.ALC_STRENGTH_TO=src.ALC_STRENGTH_TO
		WHEN NOT MATCHED
		THEN INSERT (ID, VALID_FROM, VALID_TO, EXCISE_NUMBER_CODE, FISCAL_MARK, CN_CODE_FROM, CN_CODE_TO, SIZE_OF_PRODUCER_FROM, SIZE_OF_PRODUCER_TO, DENSITY_FROM, DENSITY_TO, NOT_COLORED_AND_MARKED_OILS, FUEL_TYPE, EXEMPTION_AMOUNT, AMOUNT_RATE, PERCENT_RATE, MINIMAL_RATE, ALGORITHM_TYPE, ADDITIONAL_UNIT, BIO_COMPONENT_RATE, BIOFUEL_CONTENT_QUALITY, ALC_STRENGTH_FROM, ALC_STRENGTH_TO)
		VALUES (src.ID, src.VALID_FROM, src.VALID_TO, src.EXCISE_NUMBER_CODE, src.FISCAL_MARK, src.CN_CODE_FROM, src.CN_CODE_TO, src.SIZE_OF_PRODUCER_FROM, src.SIZE_OF_PRODUCER_TO, src.DENSITY_FROM, src.DENSITY_TO, src.NOT_COLORED_AND_MARKED_OILS, src.FUEL_TYPE, src.EXEMPTION_AMOUNT, src.AMOUNT_RATE, src.PERCENT_RATE, src.MINIMAL_RATE, src.ALGORITHM_TYPE, src.ADDITIONAL_UNIT, src.BIO_COMPONENT_RATE, src.BIOFUEL_CONTENT_QUALITY, src.ALC_STRENGTH_FROM, src.ALC_STRENGTH_TO);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_FOLLOW_UP_MESSAGES' BEGIN
		MERGE INTO emcs2.EMCS_FOLLOW_UP_MESSAGES AS tgt
		USING [WI_StageODS].emcs2.EMCS_FOLLOW_UP_MESSAGES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.MESSAGE_TYPE=src.MESSAGE_TYPE, tgt.MESSAGE_ID=src.MESSAGE_ID, tgt.OFFICE_REFERENCE_NUMBER=src.OFFICE_REFERENCE_NUMBER, tgt.STATUS=src.STATUS, tgt.ARC=src.ARC, tgt.DESCRIPTION=src.DESCRIPTION, tgt.REPORT_TYPE=src.REPORT_TYPE, tgt.REPORT_NUMBER=src.REPORT_NUMBER, tgt.CONTROL_TYPE=src.CONTROL_TYPE, tgt.HAS_ATTACHMENTS=src.HAS_ATTACHMENTS, tgt.IS_LATEST=src.IS_LATEST, tgt.PARENT_ID=src.PARENT_ID, tgt.SENDER_MSA=src.SENDER_MSA, tgt.RECIPIENT_MSA=src.RECIPIENT_MSA, tgt.CREATE_DATE=src.CREATE_DATE, tgt.CHANGE_DATE=src.CHANGE_DATE, tgt.EVENT_REPORT_REFERENCE=src.EVENT_REPORT_REFERENCE, tgt.CONSIGNOR_EXCISE_NUMBER=src.CONSIGNOR_EXCISE_NUMBER, tgt.CONSIGNEE_IDENTIFICATION=src.CONSIGNEE_IDENTIFICATION, tgt.FOUND_DISCREPANCIES=src.FOUND_DISCREPANCIES
		WHEN NOT MATCHED
		THEN INSERT (ID, MESSAGE_TYPE, MESSAGE_ID, OFFICE_REFERENCE_NUMBER, STATUS, ARC, DESCRIPTION, REPORT_TYPE, REPORT_NUMBER, CONTROL_TYPE, HAS_ATTACHMENTS, IS_LATEST, PARENT_ID, SENDER_MSA, RECIPIENT_MSA, CREATE_DATE, CHANGE_DATE, EVENT_REPORT_REFERENCE, CONSIGNOR_EXCISE_NUMBER, CONSIGNEE_IDENTIFICATION, FOUND_DISCREPANCIES)
		VALUES (src.ID, src.MESSAGE_TYPE, src.MESSAGE_ID, src.OFFICE_REFERENCE_NUMBER, src.STATUS, src.ARC, src.DESCRIPTION, src.REPORT_TYPE, src.REPORT_NUMBER, src.CONTROL_TYPE, src.HAS_ATTACHMENTS, src.IS_LATEST, src.PARENT_ID, src.SENDER_MSA, src.RECIPIENT_MSA, src.CREATE_DATE, src.CHANGE_DATE, src.EVENT_REPORT_REFERENCE, src.CONSIGNOR_EXCISE_NUMBER, src.CONSIGNEE_IDENTIFICATION, src.FOUND_DISCREPANCIES);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_FUEL_EXCISE_RATES' BEGIN
		MERGE INTO emcs2.EMCS_FUEL_EXCISE_RATES AS tgt
		USING [WI_StageODS].emcs2.EMCS_FUEL_EXCISE_RATES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.VALID_FROM=src.VALID_FROM, tgt.EXCISE_NUMBER_CODE=src.EXCISE_NUMBER_CODE, tgt.CN_CODE_FROM=src.CN_CODE_FROM, tgt.CN_CODE_TO=src.CN_CODE_TO, tgt.AMOUNT_RATE=src.AMOUNT_RATE, tgt.ALGORITHM_TYPE=src.ALGORITHM_TYPE, tgt.VALID_TO=src.VALID_TO, tgt.MEETS_QUALITY_REQUIREMENTS=src.MEETS_QUALITY_REQUIREMENTS, tgt.DENSITY_FROM=src.DENSITY_FROM, tgt.DENSITY_TO=src.DENSITY_TO, tgt.NOT_COLORED_AND_MARKED_OILS=src.NOT_COLORED_AND_MARKED_OILS, tgt.FUEL_TYPE=src.FUEL_TYPE
		WHEN NOT MATCHED
		THEN INSERT (ID, VALID_FROM, EXCISE_NUMBER_CODE, CN_CODE_FROM, CN_CODE_TO, AMOUNT_RATE, ALGORITHM_TYPE, VALID_TO, MEETS_QUALITY_REQUIREMENTS, DENSITY_FROM, DENSITY_TO, NOT_COLORED_AND_MARKED_OILS, FUEL_TYPE)
		VALUES (src.ID, src.VALID_FROM, src.EXCISE_NUMBER_CODE, src.CN_CODE_FROM, src.CN_CODE_TO, src.AMOUNT_RATE, src.ALGORITHM_TYPE, src.VALID_TO, src.MEETS_QUALITY_REQUIREMENTS, src.DENSITY_FROM, src.DENSITY_TO, src.NOT_COLORED_AND_MARKED_OILS, src.FUEL_TYPE);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_HELPDESK' BEGIN
		MERGE INTO emcs2.EMCS_HELPDESK AS tgt
		USING [WI_StageODS].emcs2.EMCS_HELPDESK AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID_HELPDESK=src.ID_HELPDESK, tgt.CREATION_DATE=src.CREATION_DATE, tgt.STATUS=src.STATUS, tgt.OFFICE_NUMBER=src.OFFICE_NUMBER, tgt.ARC=src.ARC, tgt.LRN=src.LRN, tgt.GRN=src.GRN, tgt.NRA=src.NRA, tgt.LOGIN=src.LOGIN, tgt.DATE_FROM=src.DATE_FROM, tgt.DATE_TO=src.DATE_TO, tgt.DESCRIPTION=src.DESCRIPTION, tgt.DECISION_DATE=src.DECISION_DATE, tgt.DECISION_REASON=src.DECISION_REASON, tgt.DECISION_PERSON=src.DECISION_PERSON, tgt.DECISION_INFO=src.DECISION_INFO, tgt.DECISION_SELECTED_ID=src.DECISION_SELECTED_ID, tgt.DECISION_DATE_FROM=src.DECISION_DATE_FROM, tgt.DECISION_DATE_TO=src.DECISION_DATE_TO, tgt.HD001_MSG_ID=src.HD001_MSG_ID, tgt.HD002_MSG_ID=src.HD002_MSG_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, ID_HELPDESK, CREATION_DATE, STATUS, OFFICE_NUMBER, ARC, LRN, GRN, NRA, LOGIN, DATE_FROM, DATE_TO, DESCRIPTION, DECISION_DATE, DECISION_REASON, DECISION_PERSON, DECISION_INFO, DECISION_SELECTED_ID, DECISION_DATE_FROM, DECISION_DATE_TO, HD001_MSG_ID, HD002_MSG_ID)
		VALUES (src.ID, src.ID_HELPDESK, src.CREATION_DATE, src.STATUS, src.OFFICE_NUMBER, src.ARC, src.LRN, src.GRN, src.NRA, src.LOGIN, src.DATE_FROM, src.DATE_TO, src.DESCRIPTION, src.DECISION_DATE, src.DECISION_REASON, src.DECISION_PERSON, src.DECISION_INFO, src.DECISION_SELECTED_ID, src.DECISION_DATE_FROM, src.DECISION_DATE_TO, src.HD001_MSG_ID, src.HD002_MSG_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_PROCESS_COMM' BEGIN
		MERGE INTO emcs2.EMCS_PROCESS_COMM AS tgt
		USING [WI_StageODS].emcs2.EMCS_PROCESS_COMM AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.TYPE=src.TYPE, tgt.CREATE_DATE=src.CREATE_DATE, tgt.ATTEMPT_DATE=src.ATTEMPT_DATE, tgt.STATUS=src.STATUS, tgt.FAILURE_DESCRIPTION=src.FAILURE_DESCRIPTION, tgt.REQUEST_ID=src.REQUEST_ID, tgt.MESSAGES_ID=src.MESSAGES_ID, tgt.EXT_MESSAGE_ID=src.EXT_MESSAGE_ID, tgt.PROCESSED=src.PROCESSED, tgt.OFFICE_REFERENCE_NUMBER=src.OFFICE_REFERENCE_NUMBER, tgt.USER_NAME=src.USER_NAME, tgt.WF_IS_VALID=src.WF_IS_VALID, tgt.WF_MESSAGE=src.WF_MESSAGE, tgt.BODY=src.BODY, tgt.MVMT_ID=src.MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, TYPE, CREATE_DATE, ATTEMPT_DATE, STATUS, FAILURE_DESCRIPTION, REQUEST_ID, MESSAGES_ID, EXT_MESSAGE_ID, PROCESSED, OFFICE_REFERENCE_NUMBER, USER_NAME, WF_IS_VALID, WF_MESSAGE, BODY, MVMT_ID)
		VALUES (src.ID, src.TYPE, src.CREATE_DATE, src.ATTEMPT_DATE, src.STATUS, src.FAILURE_DESCRIPTION, src.REQUEST_ID, src.MESSAGES_ID, src.EXT_MESSAGE_ID, src.PROCESSED, src.OFFICE_REFERENCE_NUMBER, src.USER_NAME, src.WF_IS_VALID, src.WF_MESSAGE, src.BODY, src.MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_PROCESS_INSTANCES' BEGIN
		MERGE INTO emcs2.EMCS_PROCESS_INSTANCES AS tgt
		USING [WI_StageODS].emcs2.EMCS_PROCESS_INSTANCES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.PROC_ID=src.PROC_ID, tgt.PAPI_ID=src.PAPI_ID, tgt.STATUS=src.STATUS, tgt.IS_TERMINATED=src.IS_TERMINATED, tgt.DESCRIPTION=src.DESCRIPTION, tgt.CREATE_DATE=src.CREATE_DATE, tgt.CHANGE_DATE=src.CHANGE_DATE, tgt.VERSION=src.VERSION
		WHEN NOT MATCHED
		THEN INSERT (ID, PROC_ID, PAPI_ID, STATUS, IS_TERMINATED, DESCRIPTION, CREATE_DATE, CHANGE_DATE, VERSION)
		VALUES (src.ID, src.PROC_ID, src.PAPI_ID, src.STATUS, src.IS_TERMINATED, src.DESCRIPTION, src.CREATE_DATE, src.CHANGE_DATE, src.VERSION);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_PROCESS_STATE_INST' BEGIN
		MERGE INTO emcs2.EMCS_PROCESS_STATE_INST AS tgt
		USING [WI_StageODS].emcs2.EMCS_PROCESS_STATE_INST AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.PRIN_ID=src.PRIN_ID, tgt.PRST_ID=src.PRST_ID, tgt.PRTR_ID=src.PRTR_ID, tgt.ATL=src.ATL, tgt.ROLE_ID=src.ROLE_ID, tgt.OFFICE_REFNUM=src.OFFICE_REFNUM, tgt.CREATE_DATE=src.CREATE_DATE, tgt.EXECUTION_DATE=src.EXECUTION_DATE, tgt.EXECUTED_BY=src.EXECUTED_BY, tgt.VERSION=src.VERSION
		WHEN NOT MATCHED
		THEN INSERT (ID, PRIN_ID, PRST_ID, PRTR_ID, ATL, ROLE_ID, OFFICE_REFNUM, CREATE_DATE, EXECUTION_DATE, EXECUTED_BY, VERSION)
		VALUES (src.ID, src.PRIN_ID, src.PRST_ID, src.PRTR_ID, src.ATL, src.ROLE_ID, src.OFFICE_REFNUM, src.CREATE_DATE, src.EXECUTION_DATE, src.EXECUTED_BY, src.VERSION);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_TIMER_TYPES' BEGIN
		MERGE INTO emcs2.EMCS_TIMER_TYPES AS tgt
		USING [WI_StageODS].emcs2.EMCS_TIMER_TYPES AS src
		ON (tgt.TIMER_TYPE=src.TIMER_TYPE)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.TIMER_TYPE=src.TIMER_TYPE, tgt.DESCRIPTION=src.DESCRIPTION
		WHEN NOT MATCHED
		THEN INSERT (TIMER_TYPE, DESCRIPTION)
		VALUES (src.TIMER_TYPE, src.DESCRIPTION);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_TIMERS' BEGIN
		MERGE INTO emcs2.EMCS_TIMERS AS tgt
		USING [WI_StageODS].emcs2.EMCS_TIMERS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.TYPE=src.TYPE, tgt.START_DATE=src.START_DATE, tgt.RUNNING=src.RUNNING, tgt.EXPIRED=src.EXPIRED, tgt.LIMIT_DATE=src.LIMIT_DATE, tgt.STOP_DATE=src.STOP_DATE, tgt.MVMT_ID=src.MVMT_ID, tgt.USER_TASK_ID=src.USER_TASK_ID, tgt.ACO_ID=src.ACO_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, TYPE, START_DATE, RUNNING, EXPIRED, LIMIT_DATE, STOP_DATE, MVMT_ID, USER_TASK_ID, ACO_ID)
		VALUES (src.ID, src.TYPE, src.START_DATE, src.RUNNING, src.EXPIRED, src.LIMIT_DATE, src.STOP_DATE, src.MVMT_ID, src.USER_TASK_ID, src.ACO_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_UNAVAILABILITIES' BEGIN
		MERGE INTO emcs2.EMCS_UNAVAILABILITIES AS tgt
		USING [WI_StageODS].emcs2.EMCS_UNAVAILABILITIES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.MEMBER_STATE_CODE=src.MEMBER_STATE_CODE, tgt.TYPE=src.TYPE, tgt.BUSINESS_PROCESS_CODE=src.BUSINESS_PROCESS_CODE, tgt.EXPLANATION=src.EXPLANATION, tgt.DOWNTIME_START=src.DOWNTIME_START, tgt.DOWNTIME_END=src.DOWNTIME_END
		WHEN NOT MATCHED
		THEN INSERT (ID, MEMBER_STATE_CODE, TYPE, BUSINESS_PROCESS_CODE, EXPLANATION, DOWNTIME_START, DOWNTIME_END)
		VALUES (src.ID, src.MEMBER_STATE_CODE, src.TYPE, src.BUSINESS_PROCESS_CODE, src.EXPLANATION, src.DOWNTIME_START, src.DOWNTIME_END);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_USER_TASK_TYPES' BEGIN
		MERGE INTO emcs2.EMCS_USER_TASK_TYPES AS tgt
		USING [WI_StageODS].emcs2.EMCS_USER_TASK_TYPES AS src
		ON (tgt.TASK_TYPE=src.TASK_TYPE)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.TASK_TYPE=src.TASK_TYPE, tgt.DESCRIPTION=src.DESCRIPTION
		WHEN NOT MATCHED
		THEN INSERT (TASK_TYPE, DESCRIPTION)
		VALUES (src.TASK_TYPE, src.DESCRIPTION);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_USER_TASKS' BEGIN
		MERGE INTO emcs2.EMCS_USER_TASKS AS tgt
		USING [WI_StageODS].emcs2.EMCS_USER_TASKS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.STATUS=src.STATUS, tgt.TASK_TYPE=src.TASK_TYPE, tgt.DUE_DATE=src.DUE_DATE, tgt.RESPONSIBLE_ROLE=src.RESPONSIBLE_ROLE, tgt.RESPONSIBLE_USER=src.RESPONSIBLE_USER, tgt.CUSTOM_OFFICE_REFNUM=src.CUSTOM_OFFICE_REFNUM, tgt.TITLE=src.TITLE, tgt.DESCRIPTION=src.DESCRIPTION, tgt.MVMT_ID=src.MVMT_ID, tgt.MESSAGES_ID=src.MESSAGES_ID, tgt.TRADER_IDENTIFICATION=src.TRADER_IDENTIFICATION, tgt.TRADER_NAME=src.TRADER_NAME, tgt.TRADER_STREET_NAME=src.TRADER_STREET_NAME, tgt.TRADER_STREET_NUMBER=src.TRADER_STREET_NUMBER, tgt.TRADER_POSTCODE=src.TRADER_POSTCODE, tgt.TRADER_CITY=src.TRADER_CITY, tgt.USER_DESCRIPTION=src.USER_DESCRIPTION, tgt.CUSTOMS_REJECTION_REASON_CODE=src.CUSTOMS_REJECTION_REASON_CODE, tgt.DOCUMENT_REFERENCE_NUMBER=src.DOCUMENT_REFERENCE_NUMBER, tgt.ZISAR_MESSAGE_ID=src.ZISAR_MESSAGE_ID, tgt.CONTROL_DEFAULT_DECISION=src.CONTROL_DEFAULT_DECISION, tgt.CONTROL_DECISION=src.CONTROL_DECISION, tgt.REPORT_MESSAGE_ID=src.REPORT_MESSAGE_ID, tgt.AMOUNT=src.AMOUNT, tgt.IS_OSOZ_ACTION_SUCCESSFULL=src.IS_OSOZ_ACTION_SUCCESSFULL, tgt.MESSAGE_WITH_ERROR_ID=src.MESSAGE_WITH_ERROR_ID, tgt.CREATE_DATE=src.CREATE_DATE, tgt.CHANGE_DATE=src.CHANGE_DATE, tgt.CHANGE_DESCRIPTION=src.CHANGE_DESCRIPTION, tgt.CHANGED_BY=src.CHANGED_BY, tgt.AUDIT_VER=src.AUDIT_VER, tgt.MVMT_ARC=src.MVMT_ARC, tgt.MVMT_LRN=src.MVMT_LRN, tgt.PLACE_OF_CONTROL_NAME=src.PLACE_OF_CONTROL_NAME, tgt.CONTROL_REQUESTED=src.CONTROL_REQUESTED, tgt.TRANSHIPMENT_DATE=src.TRANSHIPMENT_DATE
		WHEN NOT MATCHED
		THEN INSERT (ID, STATUS, TASK_TYPE, DUE_DATE, RESPONSIBLE_ROLE, RESPONSIBLE_USER, CUSTOM_OFFICE_REFNUM, TITLE, DESCRIPTION, MVMT_ID, MESSAGES_ID, TRADER_IDENTIFICATION, TRADER_NAME, TRADER_STREET_NAME, TRADER_STREET_NUMBER, TRADER_POSTCODE, TRADER_CITY, USER_DESCRIPTION, CUSTOMS_REJECTION_REASON_CODE, DOCUMENT_REFERENCE_NUMBER, ZISAR_MESSAGE_ID, CONTROL_DEFAULT_DECISION, CONTROL_DECISION, REPORT_MESSAGE_ID, AMOUNT, IS_OSOZ_ACTION_SUCCESSFULL, MESSAGE_WITH_ERROR_ID, CREATE_DATE, CHANGE_DATE, CHANGE_DESCRIPTION, CHANGED_BY, AUDIT_VER, MVMT_ARC, MVMT_LRN, PLACE_OF_CONTROL_NAME, CONTROL_REQUESTED, TRANSHIPMENT_DATE)
		VALUES (src.ID, src.STATUS, src.TASK_TYPE, src.DUE_DATE, src.RESPONSIBLE_ROLE, src.RESPONSIBLE_USER, src.CUSTOM_OFFICE_REFNUM, src.TITLE, src.DESCRIPTION, src.MVMT_ID, src.MESSAGES_ID, src.TRADER_IDENTIFICATION, src.TRADER_NAME, src.TRADER_STREET_NAME, src.TRADER_STREET_NUMBER, src.TRADER_POSTCODE, src.TRADER_CITY, src.USER_DESCRIPTION, src.CUSTOMS_REJECTION_REASON_CODE, src.DOCUMENT_REFERENCE_NUMBER, src.ZISAR_MESSAGE_ID, src.CONTROL_DEFAULT_DECISION, src.CONTROL_DECISION, src.REPORT_MESSAGE_ID, src.AMOUNT, src.IS_OSOZ_ACTION_SUCCESSFULL, src.MESSAGE_WITH_ERROR_ID, src.CREATE_DATE, src.CHANGE_DATE, src.CHANGE_DESCRIPTION, src.CHANGED_BY, src.AUDIT_VER, src.MVMT_ARC, src.MVMT_LRN, src.PLACE_OF_CONTROL_NAME, src.CONTROL_REQUESTED, src.TRANSHIPMENT_DATE);
		SET @Merged = 1;
	END

-- tabela nie ma klucza głównego, zakładam, że kluczem jest ID
	IF @TableName = 'EMCS_USER_TASKS_JN' BEGIN
		MERGE INTO emcs2.EMCS_USER_TASKS_JN AS tgt
		USING [WI_StageODS].emcs2.EMCS_USER_TASKS_JN AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.JN_OPERATION=src.JN_OPERATION, tgt.JN_ORACLE_USER=src.JN_ORACLE_USER, tgt.JN_DATETIME=src.JN_DATETIME, tgt.JN_NOTES=src.JN_NOTES, tgt.JN_APPLN=src.JN_APPLN, tgt.JN_SESSION=src.JN_SESSION, tgt.ID=src.ID, tgt.STATUS=src.STATUS, tgt.TASK_TYPE=src.TASK_TYPE, tgt.DUE_DATE=src.DUE_DATE, tgt.RESPONSIBLE_ROLE=src.RESPONSIBLE_ROLE, tgt.RESPONSIBLE_USER=src.RESPONSIBLE_USER, tgt.CUSTOM_OFFICE_REFNUM=src.CUSTOM_OFFICE_REFNUM, tgt.TITLE=src.TITLE, tgt.DESCRIPTION=src.DESCRIPTION, tgt.MVMT_ID=src.MVMT_ID, tgt.MESSAGES_ID=src.MESSAGES_ID, tgt.TRADER_IDENTIFICATION=src.TRADER_IDENTIFICATION, tgt.TRADER_NAME=src.TRADER_NAME, tgt.TRADER_STREET_NAME=src.TRADER_STREET_NAME, tgt.TRADER_STREET_NUMBER=src.TRADER_STREET_NUMBER, tgt.TRADER_POSTCODE=src.TRADER_POSTCODE, tgt.TRADER_CITY=src.TRADER_CITY, tgt.USER_DESCRIPTION=src.USER_DESCRIPTION, tgt.CUSTOMS_REJECTION_REASON_CODE=src.CUSTOMS_REJECTION_REASON_CODE, tgt.DOCUMENT_REFERENCE_NUMBER=src.DOCUMENT_REFERENCE_NUMBER, tgt.ZISAR_MESSAGE_ID=src.ZISAR_MESSAGE_ID, tgt.CONTROL_DEFAULT_DECISION=src.CONTROL_DEFAULT_DECISION, tgt.CONTROL_DECISION=src.CONTROL_DECISION, tgt.REPORT_MESSAGE_ID=src.REPORT_MESSAGE_ID, tgt.AMOUNT=src.AMOUNT, tgt.IS_OSOZ_ACTION_SUCCESSFULL=src.IS_OSOZ_ACTION_SUCCESSFULL, tgt.MESSAGE_WITH_ERROR_ID=src.MESSAGE_WITH_ERROR_ID, tgt.CREATE_DATE=src.CREATE_DATE, tgt.CHANGE_DATE=src.CHANGE_DATE, tgt.CHANGE_DESCRIPTION=src.CHANGE_DESCRIPTION, tgt.CHANGED_BY=src.CHANGED_BY, tgt.AUDIT_VER=src.AUDIT_VER, tgt.MVMT_ARC=src.MVMT_ARC, tgt.MVMT_LRN=src.MVMT_LRN, tgt.PLACE_OF_CONTROL_NAME=src.PLACE_OF_CONTROL_NAME, tgt.CONTROL_REQUESTED=src.CONTROL_REQUESTED, tgt.TRANSHIPMENT_DATE=src.TRANSHIPMENT_DATE
		WHEN NOT MATCHED
		THEN INSERT (JN_OPERATION, JN_ORACLE_USER, JN_DATETIME, JN_NOTES, JN_APPLN, JN_SESSION, ID, STATUS, TASK_TYPE, DUE_DATE, RESPONSIBLE_ROLE, RESPONSIBLE_USER, CUSTOM_OFFICE_REFNUM, TITLE, DESCRIPTION, MVMT_ID, MESSAGES_ID, TRADER_IDENTIFICATION, TRADER_NAME, TRADER_STREET_NAME, TRADER_STREET_NUMBER, TRADER_POSTCODE, TRADER_CITY, USER_DESCRIPTION, CUSTOMS_REJECTION_REASON_CODE, DOCUMENT_REFERENCE_NUMBER, ZISAR_MESSAGE_ID, CONTROL_DEFAULT_DECISION, CONTROL_DECISION, REPORT_MESSAGE_ID, AMOUNT, IS_OSOZ_ACTION_SUCCESSFULL, MESSAGE_WITH_ERROR_ID, CREATE_DATE, CHANGE_DATE, CHANGE_DESCRIPTION, CHANGED_BY, AUDIT_VER, MVMT_ARC, MVMT_LRN, PLACE_OF_CONTROL_NAME, CONTROL_REQUESTED, TRANSHIPMENT_DATE)
		VALUES (src.JN_OPERATION, src.JN_ORACLE_USER, src.JN_DATETIME, src.JN_NOTES, src.JN_APPLN, src.JN_SESSION, src.ID, src.STATUS, src.TASK_TYPE, src.DUE_DATE, src.RESPONSIBLE_ROLE, src.RESPONSIBLE_USER, src.CUSTOM_OFFICE_REFNUM, src.TITLE, src.DESCRIPTION, src.MVMT_ID, src.MESSAGES_ID, src.TRADER_IDENTIFICATION, src.TRADER_NAME, src.TRADER_STREET_NAME, src.TRADER_STREET_NUMBER, src.TRADER_POSTCODE, src.TRADER_CITY, src.USER_DESCRIPTION, src.CUSTOMS_REJECTION_REASON_CODE, src.DOCUMENT_REFERENCE_NUMBER, src.ZISAR_MESSAGE_ID, src.CONTROL_DEFAULT_DECISION, src.CONTROL_DECISION, src.REPORT_MESSAGE_ID, src.AMOUNT, src.IS_OSOZ_ACTION_SUCCESSFULL, src.MESSAGE_WITH_ERROR_ID, src.CREATE_DATE, src.CHANGE_DATE, src.CHANGE_DESCRIPTION, src.CHANGED_BY, src.AUDIT_VER, src.MVMT_ARC, src.MVMT_LRN, src.PLACE_OF_CONTROL_NAME, src.CONTROL_REQUESTED, src.TRANSHIPMENT_DATE);
		SET @Merged = 1;
	END

	IF @TableName = 'EMCS_USER_TASKS_SAD_DOCS' BEGIN
		MERGE INTO emcs2.EMCS_USER_TASKS_SAD_DOCS AS tgt
		USING [WI_StageODS].emcs2.EMCS_USER_TASKS_SAD_DOCS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.SAD_NUMBER=src.SAD_NUMBER, tgt.USER_TASK_ID=src.USER_TASK_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, SAD_NUMBER, USER_TASK_ID)
		VALUES (src.ID, src.SAD_NUMBER, src.USER_TASK_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'EXCISE_PRODUCTS' BEGIN
		MERGE INTO emcs2.EXCISE_PRODUCTS AS tgt
		USING [WI_StageODS].emcs2.EXCISE_PRODUCTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.CODE=src.CODE, tgt.DESCRIPTION=src.DESCRIPTION, tgt.DESCRIPTION_LANG_CODE=src.DESCRIPTION_LANG_CODE, tgt.CATEGORY=src.CATEGORY, tgt.UNIT_OF_MEASURE=src.UNIT_OF_MEASURE, tgt.ALCOHOLIC_STRENGTH_REQ=src.ALCOHOLIC_STRENGTH_REQ, tgt.DEGREE_PLATO_REQ=src.DEGREE_PLATO_REQ, tgt.DENSITY_REQ=src.DENSITY_REQ, tgt.POLISH_CODE=src.POLISH_CODE, tgt.VALID_FROM=src.VALID_FROM, tgt.VALID_TO=src.VALID_TO, tgt.ACTION_IDENTIFIER=src.ACTION_IDENTIFIER, tgt.INVALIDATE_ACTION_IDENTIFIER=src.INVALIDATE_ACTION_IDENTIFIER
		WHEN NOT MATCHED
		THEN INSERT (ID, CODE, DESCRIPTION, DESCRIPTION_LANG_CODE, CATEGORY, UNIT_OF_MEASURE, ALCOHOLIC_STRENGTH_REQ, DEGREE_PLATO_REQ, DENSITY_REQ, POLISH_CODE, VALID_FROM, VALID_TO, ACTION_IDENTIFIER, INVALIDATE_ACTION_IDENTIFIER)
		VALUES (src.ID, src.CODE, src.DESCRIPTION, src.DESCRIPTION_LANG_CODE, src.CATEGORY, src.UNIT_OF_MEASURE, src.ALCOHOLIC_STRENGTH_REQ, src.DEGREE_PLATO_REQ, src.DENSITY_REQ, src.POLISH_CODE, src.VALID_FROM, src.VALID_TO, src.ACTION_IDENTIFIER, src.INVALIDATE_ACTION_IDENTIFIER);
		SET @Merged = 1;
	END

	IF @TableName = 'MESSAGE_TYPES' BEGIN
		MERGE INTO emcs2.MESSAGE_TYPES AS tgt
		USING [WI_StageODS].emcs2.MESSAGE_TYPES AS src
		ON (tgt.MESSAGE_TYPE=src.MESSAGE_TYPE)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.MESSAGE_TYPE=src.MESSAGE_TYPE, tgt.DESCRIPTION=src.DESCRIPTION
		WHEN NOT MATCHED
		THEN INSERT (MESSAGE_TYPE, DESCRIPTION)
		VALUES (src.MESSAGE_TYPE, src.DESCRIPTION);
		SET @Merged = 1;
	END

	IF @TableName = 'MESSAGES' BEGIN
		MERGE INTO emcs2.[MESSAGES] AS tgt
		USING [WI_StageODS].emcs2.[MESSAGES] AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.CONTENTOBJECTID=src.CONTENTOBJECTID, tgt.FILEID=src.FILEID, tgt.CHECKEDOUTBYID=src.CHECKEDOUTBYID, tgt.CHECKEDOUTON=src.CHECKEDOUTON, tgt.CHECKEDOUTCOMMENT=src.CHECKEDOUTCOMMENT, tgt.CHECKOUTEXPIRESON=src.CHECKOUTEXPIRESON, tgt.CHECKINPLANNEDON=src.CHECKINPLANNEDON, tgt.CREATEDON=src.CREATEDON, tgt.CREATEDBYID=src.CREATEDBYID, tgt.MODIFIEDON=src.MODIFIEDON, tgt.MODIFIEDBYID=src.MODIFIEDBYID, tgt.VALIDFROM=src.VALIDFROM, tgt.VALIDTO=src.VALIDTO, tgt.NEVEREXPIRES=src.NEVEREXPIRES, tgt.DISPLAYNAME=src.DISPLAYNAME, tgt.DESCRIPTION=src.DESCRIPTION, tgt.PARENTID=src.PARENTID, tgt.CLASSIFIERID=src.CLASSIFIERID, tgt.LASTOPENBYID=src.LASTOPENBYID, tgt.LASTOPENON=src.LASTOPENON, tgt.CURRENTVERSIONID=src.CURRENTVERSIONID, tgt.ISARCHIVED=src.ISARCHIVED, tgt.ARCHIVEDON=src.ARCHIVEDON, tgt.ARCHIVECONTAINERID=src.ARCHIVECONTAINERID, tgt.ARCHIVEDBYID=src.ARCHIVEDBYID, tgt.WORKSTATUSID=src.WORKSTATUSID, tgt.APPROVALSTATUSID=src.APPROVALSTATUSID, tgt.APPROVERCOMMENTS=src.APPROVERCOMMENTS, tgt.APPROVEDON=src.APPROVEDON, tgt.APPROVEDBYID=src.APPROVEDBYID, tgt.DIGITALSIGNATURESTATUSID=src.DIGITALSIGNATURESTATUSID, tgt.SIGNATUREVERIFIEDON=src.SIGNATUREVERIFIEDON, tgt.SIGNATUREVERIFIEDBY=src.SIGNATUREVERIFIEDBY, tgt.REGISTEREDON=src.REGISTEREDON, tgt.REGISTEREDBYID=src.REGISTEREDBYID, tgt.REGISTRATIONCOMMENTS=src.REGISTRATIONCOMMENTS, tgt.SUBMITEDON=src.SUBMITEDON, tgt.SUBMITEDBYID=src.SUBMITEDBYID, tgt.SUBMISSIONCHANNELID=src.SUBMISSIONCHANNELID, tgt.ISDELETED=src.ISDELETED, tgt.GLOBALTEMPLATEUSEDID=src.GLOBALTEMPLATEUSEDID, tgt.ISLOCALTEMPLATEUSED=src.ISLOCALTEMPLATEUSED, tgt.BORROWEDBY=src.BORROWEDBY, tgt.BORROWEDON=src.BORROWEDON, tgt.BORROWSUMMARY=src.BORROWSUMMARY, tgt.SGUID=src.SGUID, tgt.MSG_DATE=src.MSG_DATE, tgt.MSG_TYPE=src.MSG_TYPE, tgt.MSG_SENDER=src.MSG_SENDER, tgt.MSG_CORRELATION_IDENTIFIER=src.MSG_CORRELATION_IDENTIFIER, tgt.MSG_IDENTIFIER=src.MSG_IDENTIFIER, tgt.MSG_RECIPIENT=src.MSG_RECIPIENT, tgt.MSG_PREPARATION_TIMESTAMP=src.MSG_PREPARATION_TIMESTAMP, tgt.MSG_PROCESSED=src.MSG_PROCESSED, tgt.MSG_SOURCE=src.MSG_SOURCE, tgt.MSG_DESTINATION=src.MSG_DESTINATION, tgt.MSG_EMAIL=src.MSG_EMAIL, tgt.MSG_CD_MSG_ID=src.MSG_CD_MSG_ID, tgt.MSG_CD_CORREL_ID=src.MSG_CD_CORREL_ID, tgt.MSG_LRN=src.MSG_LRN, tgt.MSG_MVMT_ID=src.MSG_MVMT_ID, tgt.MSG_MVMT_ARC=src.MSG_MVMT_ARC, tgt.MSG_MVMT_SEQUENCE_NUMBER=src.MSG_MVMT_SEQUENCE_NUMBER, tgt.MSG_WF_IS_VALID=src.MSG_WF_IS_VALID, tgt.MSG_WF_MESSAGE=src.MSG_WF_MESSAGE, tgt.MSG_WF_SYNC_TOKEN=src.MSG_WF_SYNC_TOKEN, tgt.MSG_MANUAL_MODE=src.MSG_MANUAL_MODE, tgt.MSG_REQUEST_ID=src.MSG_REQUEST_ID, tgt.MSG_REQUEST_SOURCE=src.MSG_REQUEST_SOURCE, tgt.MSG_OFFICE_REFERENCE_NUMBER=src.MSG_OFFICE_REFERENCE_NUMBER, tgt.MSG_USER_LOGIN=src.MSG_USER_LOGIN, tgt.MSG_NEXT_PROCESSING_TIME=src.MSG_NEXT_PROCESSING_TIME, tgt.MSG_VERSION=src.MSG_VERSION, tgt.MSG_ID_PODMIOTU=src.MSG_ID_PODMIOTU, tgt.MSG_ID_PODMIOTU_POSR=src.MSG_ID_PODMIOTU_POSR, tgt.MSG_ID_OSOBY_ID_SEAP=src.MSG_ID_OSOBY_ID_SEAP, tgt.MSG_ID_OSOBY_ID_SISC=src.MSG_ID_OSOBY_ID_SISC, tgt.MSG_ID_SPRAWY=src.MSG_ID_SPRAWY, tgt.MSG_ID_WPLYWU=src.MSG_ID_WPLYWU, tgt.MSG_LAST_BUSINESSLOG_ID=src.MSG_LAST_BUSINESSLOG_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, CONTENTOBJECTID, FILEID, CHECKEDOUTBYID, CHECKEDOUTON, CHECKEDOUTCOMMENT, CHECKOUTEXPIRESON, CHECKINPLANNEDON, CREATEDON, CREATEDBYID, MODIFIEDON, MODIFIEDBYID, VALIDFROM, VALIDTO, NEVEREXPIRES, DISPLAYNAME, DESCRIPTION, PARENTID, CLASSIFIERID, LASTOPENBYID, LASTOPENON, CURRENTVERSIONID, ISARCHIVED, ARCHIVEDON, ARCHIVECONTAINERID, ARCHIVEDBYID, WORKSTATUSID, APPROVALSTATUSID, APPROVERCOMMENTS, APPROVEDON, APPROVEDBYID, DIGITALSIGNATURESTATUSID, SIGNATUREVERIFIEDON, SIGNATUREVERIFIEDBY, REGISTEREDON, REGISTEREDBYID, REGISTRATIONCOMMENTS, SUBMITEDON, SUBMITEDBYID, SUBMISSIONCHANNELID, ISDELETED, GLOBALTEMPLATEUSEDID, ISLOCALTEMPLATEUSED, BORROWEDBY, BORROWEDON, BORROWSUMMARY, SGUID, MSG_DATE, MSG_TYPE, MSG_SENDER, MSG_CORRELATION_IDENTIFIER, MSG_IDENTIFIER, MSG_RECIPIENT, MSG_PREPARATION_TIMESTAMP, MSG_PROCESSED, MSG_SOURCE, MSG_DESTINATION, MSG_EMAIL, MSG_CD_MSG_ID, MSG_CD_CORREL_ID, MSG_LRN, MSG_MVMT_ID, MSG_MVMT_ARC, MSG_MVMT_SEQUENCE_NUMBER, MSG_WF_IS_VALID, MSG_WF_MESSAGE, MSG_WF_SYNC_TOKEN, MSG_MANUAL_MODE, MSG_REQUEST_ID, MSG_REQUEST_SOURCE, MSG_OFFICE_REFERENCE_NUMBER, MSG_USER_LOGIN, MSG_NEXT_PROCESSING_TIME, MSG_VERSION, MSG_ID_PODMIOTU, MSG_ID_PODMIOTU_POSR, MSG_ID_OSOBY_ID_SEAP, MSG_ID_OSOBY_ID_SISC, MSG_ID_SPRAWY, MSG_ID_WPLYWU, MSG_LAST_BUSINESSLOG_ID)
		VALUES (src.ID, src.CONTENTOBJECTID, src.FILEID, src.CHECKEDOUTBYID, src.CHECKEDOUTON, src.CHECKEDOUTCOMMENT, src.CHECKOUTEXPIRESON, src.CHECKINPLANNEDON, src.CREATEDON, src.CREATEDBYID, src.MODIFIEDON, src.MODIFIEDBYID, src.VALIDFROM, src.VALIDTO, src.NEVEREXPIRES, src.DISPLAYNAME, src.DESCRIPTION, src.PARENTID, src.CLASSIFIERID, src.LASTOPENBYID, src.LASTOPENON, src.CURRENTVERSIONID, src.ISARCHIVED, src.ARCHIVEDON, src.ARCHIVECONTAINERID, src.ARCHIVEDBYID, src.WORKSTATUSID, src.APPROVALSTATUSID, src.APPROVERCOMMENTS, src.APPROVEDON, src.APPROVEDBYID, src.DIGITALSIGNATURESTATUSID, src.SIGNATUREVERIFIEDON, src.SIGNATUREVERIFIEDBY, src.REGISTEREDON, src.REGISTEREDBYID, src.REGISTRATIONCOMMENTS, src.SUBMITEDON, src.SUBMITEDBYID, src.SUBMISSIONCHANNELID, src.ISDELETED, src.GLOBALTEMPLATEUSEDID, src.ISLOCALTEMPLATEUSED, src.BORROWEDBY, src.BORROWEDON, src.BORROWSUMMARY, src.SGUID, src.MSG_DATE, src.MSG_TYPE, src.MSG_SENDER, src.MSG_CORRELATION_IDENTIFIER, src.MSG_IDENTIFIER, src.MSG_RECIPIENT, src.MSG_PREPARATION_TIMESTAMP, src.MSG_PROCESSED, src.MSG_SOURCE, src.MSG_DESTINATION, src.MSG_EMAIL, src.MSG_CD_MSG_ID, src.MSG_CD_CORREL_ID, src.MSG_LRN, src.MSG_MVMT_ID, src.MSG_MVMT_ARC, src.MSG_MVMT_SEQUENCE_NUMBER, src.MSG_WF_IS_VALID, src.MSG_WF_MESSAGE, src.MSG_WF_SYNC_TOKEN, src.MSG_MANUAL_MODE, src.MSG_REQUEST_ID, src.MSG_REQUEST_SOURCE, src.MSG_OFFICE_REFERENCE_NUMBER, src.MSG_USER_LOGIN, src.MSG_NEXT_PROCESSING_TIME, src.MSG_VERSION, src.MSG_ID_PODMIOTU, src.MSG_ID_PODMIOTU_POSR, src.MSG_ID_OSOBY_ID_SEAP, src.MSG_ID_OSOBY_ID_SISC, src.MSG_ID_SPRAWY, src.MSG_ID_WPLYWU, src.MSG_LAST_BUSINESSLOG_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'MOVEMENTS' BEGIN
		MERGE INTO emcs2.MOVEMENTS AS tgt
		USING [WI_StageODS].emcs2.MOVEMENTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.ARC=src.ARC, tgt.STATUS=src.STATUS, tgt.SEQUENCE_NUMBER=src.SEQUENCE_NUMBER, tgt.LRN=src.LRN, tgt.MRN=src.MRN, tgt.IS_PLACEOFDISPATCH_DOMESTIC=src.IS_PLACEOFDISPATCH_DOMESTIC, tgt.CONSIGNOR_MSG_RECIPIENT=src.CONSIGNOR_MSG_RECIPIENT, tgt.CONSIGNOR_MSG_EMAIL=src.CONSIGNOR_MSG_EMAIL, tgt.IS_PLACEOFDELIVERY_DOMESTIC=src.IS_PLACEOFDELIVERY_DOMESTIC, tgt.CONSIGNEE_MSG_RECIPIENT=src.CONSIGNEE_MSG_RECIPIENT, tgt.CONSIGNEE_MSG_EMAIL=src.CONSIGNEE_MSG_EMAIL, tgt.MOVEMENT_CODE=src.MOVEMENT_CODE, tgt.NOTIFICATION_VALIDATION_DATE=src.NOTIFICATION_VALIDATION_DATE, tgt.DRAFT_VALIDATION_DATE=src.DRAFT_VALIDATION_DATE, tgt.EXPORTING_VALID_DATE=src.EXPORTING_VALID_DATE, tgt.CANCELATION_VALID_DATE=src.CANCELATION_VALID_DATE, tgt.CHANGE_OF_DEST_VALID_DATE=src.CHANGE_OF_DEST_VALID_DATE, tgt.REPORT_OF_RECEIPT_VALID_DATE=src.REPORT_OF_RECEIPT_VALID_DATE, tgt.DATE_AND_TIME_OF_DISPATCH=src.DATE_AND_TIME_OF_DISPATCH, tgt.IS_TIME_OF_DISPATCH_SET=src.IS_TIME_OF_DISPATCH_SET, tgt.SUBMISSION_TYPE=src.SUBMISSION_TYPE, tgt.ORIGIN_TYPE_CODE=src.ORIGIN_TYPE_CODE, tgt.DESTINATION_TYPE_CODE=src.DESTINATION_TYPE_CODE, tgt.JOURNEY_TIME=src.JOURNEY_TIME, tgt.TRANSPORT_ARRANGEMENT_CODE=src.TRANSPORT_ARRANGEMENT_CODE, tgt.DEFERRED_SUBMISSION_FLAG=src.DEFERRED_SUBMISSION_FLAG, tgt.INVOICE_NUMBER=src.INVOICE_NUMBER, tgt.INVOICE_DATE=src.INVOICE_DATE, tgt.CONSIGNOR_EXCISE_NUMBER=src.CONSIGNOR_EXCISE_NUMBER, tgt.CONSIGNOR_NAME=src.CONSIGNOR_NAME, tgt.CONSIGNOR_STREET_NAME=src.CONSIGNOR_STREET_NAME, tgt.CONSIGNOR_STREET_NUMBER=src.CONSIGNOR_STREET_NUMBER, tgt.CONSIGNOR_POSTCODE=src.CONSIGNOR_POSTCODE, tgt.CONSIGNOR_CITY=src.CONSIGNOR_CITY, tgt.CONSIGNOR_LANG_CODE=src.CONSIGNOR_LANG_CODE, tgt.PLACEOFDISPATCH_EXCISE_NUMBER=src.PLACEOFDISPATCH_EXCISE_NUMBER, tgt.PLACEOFDISPATCH_NAME=src.PLACEOFDISPATCH_NAME, tgt.PLACEOFDISPATCH_STREET_NAME=src.PLACEOFDISPATCH_STREET_NAME, tgt.PLACEOFDISPATCH_STREET_NUMBER=src.PLACEOFDISPATCH_STREET_NUMBER, tgt.PLACEOFDISPATCH_POSTCODE=src.PLACEOFDISPATCH_POSTCODE, tgt.PLACEOFDISPATCH_CITY=src.PLACEOFDISPATCH_CITY, tgt.PLACEOFDISPATCH_LANG_CODE=src.PLACEOFDISPATCH_LANG_CODE, tgt.PLACEOFDISPATCH_OFFICE_REFNUM=src.PLACEOFDISPATCH_OFFICE_REFNUM, tgt.PLACEOFDISPATCH_CTR_OFF_REF=src.PLACEOFDISPATCH_CTR_OFF_REF, tgt.IMPORT_CUST_OFFICE_REFNUM=src.IMPORT_CUST_OFFICE_REFNUM, tgt.CONSIGNEE_IDENTIFICATION=src.CONSIGNEE_IDENTIFICATION, tgt.CONSIGNEE_NAME=src.CONSIGNEE_NAME, tgt.CONSIGNEE_STREET_NAME=src.CONSIGNEE_STREET_NAME, tgt.CONSIGNEE_STREET_NUMBER=src.CONSIGNEE_STREET_NUMBER, tgt.CONSIGNEE_POSTCODE=src.CONSIGNEE_POSTCODE, tgt.CONSIGNEE_CITY=src.CONSIGNEE_CITY, tgt.CONSIGNEE_LANG_CODE=src.CONSIGNEE_LANG_CODE, tgt.COMPL_CONSIGNEE_COUNTRY_CODE=src.COMPL_CONSIGNEE_COUNTRY_CODE, tgt.COMPL_CONSIGNEE_EXEMPTION_CERT=src.COMPL_CONSIGNEE_EXEMPTION_CERT, tgt.WAS_CONSIGNEE_CHANGED=src.WAS_CONSIGNEE_CHANGED, tgt.PLACEOFDELIVERY_IDENTIFICATION=src.PLACEOFDELIVERY_IDENTIFICATION, tgt.PLACEOFDELIVERY_NAME=src.PLACEOFDELIVERY_NAME, tgt.PLACEOFDELIVERY_STREET_NAME=src.PLACEOFDELIVERY_STREET_NAME, tgt.PLACEOFDELIVERY_STREET_NUMBER=src.PLACEOFDELIVERY_STREET_NUMBER, tgt.PLACEOFDELIVERY_POSTCODE=src.PLACEOFDELIVERY_POSTCODE, tgt.PLACEOFDELIVERY_CITY=src.PLACEOFDELIVERY_CITY, tgt.PLACEOFDELIVERY_LANG_CODE=src.PLACEOFDELIVERY_LANG_CODE, tgt.PLACEOFDELIVERY_OFFICE_REFNUM=src.PLACEOFDELIVERY_OFFICE_REFNUM, tgt.PLACEOFDELIVERY_CTR_OFFICE_REF=src.PLACEOFDELIVERY_CTR_OFFICE_REF, tgt.GUARANTOR_TYPE_CODE=src.GUARANTOR_TYPE_CODE, tgt.GUARANTEE_REFERENCE_NUMBER=src.GUARANTEE_REFERENCE_NUMBER, tgt.CONSIGNOR_TIN=src.CONSIGNOR_TIN, tgt.GUARANTOR_TIN=src.GUARANTOR_TIN, tgt.GUARANTEE_AMOUNT=src.GUARANTEE_AMOUNT, tgt.GUARANTEE_REMAINING_AMOUNT=src.GUARANTEE_REMAINING_AMOUNT, tgt.GUARANTEE_SHORTAGE_AMOUNT=src.GUARANTEE_SHORTAGE_AMOUNT, tgt.GUARANTEE_AMOUNT_MANUALLY_REL=src.GUARANTEE_AMOUNT_MANUALLY_REL, tgt.GUARANTOR1_EXCISE_NUMBER=src.GUARANTOR1_EXCISE_NUMBER, tgt.GUARANTOR1_NAME=src.GUARANTOR1_NAME, tgt.GUARANTOR1_STREET_NAME=src.GUARANTOR1_STREET_NAME, tgt.GUARANTOR1_STREET_NUMBER=src.GUARANTOR1_STREET_NUMBER, tgt.GUARANTOR1_POSTCODE=src.GUARANTOR1_POSTCODE, tgt.GUARANTOR1_CITY=src.GUARANTOR1_CITY, tgt.GUARANTOR1_VAT_NUMBER=src.GUARANTOR1_VAT_NUMBER, tgt.GUARANTOR1_LANG_CODE=src.GUARANTOR1_LANG_CODE, tgt.GUARANTOR2_EXCISE_NUMBER=src.GUARANTOR2_EXCISE_NUMBER, tgt.GUARANTOR2_NAME=src.GUARANTOR2_NAME, tgt.GUARANTOR2_STREET_NAME=src.GUARANTOR2_STREET_NAME, tgt.GUARANTOR2_STREET_NUMBER=src.GUARANTOR2_STREET_NUMBER, tgt.GUARANTOR2_POSTCODE=src.GUARANTOR2_POSTCODE, tgt.GUARANTOR2_CITY=src.GUARANTOR2_CITY, tgt.GUARANTOR2_VAT_NUMBER=src.GUARANTOR2_VAT_NUMBER, tgt.GUARANTOR2_LANG_CODE=src.GUARANTOR2_LANG_CODE, tgt.TRANSPORT_MODE=src.TRANSPORT_MODE, tgt.TRANSPORT_ARRANGER_VAT_NUMBER=src.TRANSPORT_ARRANGER_VAT_NUMBER, tgt.TRANSPORT_ARRANGER_NAME=src.TRANSPORT_ARRANGER_NAME, tgt.TRANSPORT_ARRANGER_STREET_NAME=src.TRANSPORT_ARRANGER_STREET_NAME, tgt.TRANSPORT_ARRANGER_STREET_NUMB=src.TRANSPORT_ARRANGER_STREET_NUMB, tgt.TRANSPORT_ARRANGER_POSTCODE=src.TRANSPORT_ARRANGER_POSTCODE, tgt.TRANSPORT_ARRANGER_CITY=src.TRANSPORT_ARRANGER_CITY, tgt.TRANSPORT_ARRANGER_LANG_CODE=src.TRANSPORT_ARRANGER_LANG_CODE, tgt.FIRST_TRANSPORTER_VAT_NUMBER=src.FIRST_TRANSPORTER_VAT_NUMBER, tgt.FIRST_TRANSPORTER_NAME=src.FIRST_TRANSPORTER_NAME, tgt.FIRST_TRANSPORTER_STREET_NAME=src.FIRST_TRANSPORTER_STREET_NAME, tgt.FIRST_TRANSPORTER_STREET_NUMB=src.FIRST_TRANSPORTER_STREET_NUMB, tgt.FIRST_TRANSPORTER_POSTCODE=src.FIRST_TRANSPORTER_POSTCODE, tgt.FIRST_TRANSPORTER_CITY=src.FIRST_TRANSPORTER_CITY, tgt.FIRST_TRANSPORTER_LANG_CODE=src.FIRST_TRANSPORTER_LANG_CODE, tgt.WAS_TRANSPORTER_CHANGED=src.WAS_TRANSPORTER_CHANGED, tgt.IS_PLACEOFDISPATCH_CONTROLLED=src.IS_PLACEOFDISPATCH_CONTROLLED, tgt.IS_PLACEOFDELIVERY_CONTROLLED=src.IS_PLACEOFDELIVERY_CONTROLLED, tgt.IS_DELIVERY_NOTIFIED=src.IS_DELIVERY_NOTIFIED, tgt.IS_DELAY_SIGNALLED=src.IS_DELAY_SIGNALLED, tgt.IS_CONSIGNOR_EXPL_EXPECTED=src.IS_CONSIGNOR_EXPL_EXPECTED, tgt.IS_CONSIGNEE_EXPL_EXPECTED=src.IS_CONSIGNEE_EXPL_EXPECTED, tgt.IS_MOVEMENT_TIME_EXPIRED=src.IS_MOVEMENT_TIME_EXPIRED, tgt.IS_AER_DISCREPANCIES_FOUND=src.IS_AER_DISCREPANCIES_FOUND, tgt.UPSTREAM_ARC=src.UPSTREAM_ARC, tgt.ALERT_OR_REJECTION_VALID_DATE=src.ALERT_OR_REJECTION_VALID_DATE, tgt.SPLITTING_VALID_DATE=src.SPLITTING_VALID_DATE, tgt.TRANSPORT_MODE_COMPL_INFO=src.TRANSPORT_MODE_COMPL_INFO, tgt.TRANSPORT_MODE_COMPL_INFO_LANG=src.TRANSPORT_MODE_COMPL_INFO_LANG, tgt.EXCISE_PRODUCTS_CODES=src.EXCISE_PRODUCTS_CODES
		WHEN NOT MATCHED
		THEN INSERT (ID, ARC, STATUS, SEQUENCE_NUMBER, LRN, MRN, IS_PLACEOFDISPATCH_DOMESTIC, CONSIGNOR_MSG_RECIPIENT, CONSIGNOR_MSG_EMAIL, IS_PLACEOFDELIVERY_DOMESTIC, CONSIGNEE_MSG_RECIPIENT, CONSIGNEE_MSG_EMAIL, MOVEMENT_CODE, NOTIFICATION_VALIDATION_DATE, DRAFT_VALIDATION_DATE, EXPORTING_VALID_DATE, CANCELATION_VALID_DATE, CHANGE_OF_DEST_VALID_DATE, REPORT_OF_RECEIPT_VALID_DATE, DATE_AND_TIME_OF_DISPATCH, IS_TIME_OF_DISPATCH_SET, SUBMISSION_TYPE, ORIGIN_TYPE_CODE, DESTINATION_TYPE_CODE, JOURNEY_TIME, TRANSPORT_ARRANGEMENT_CODE, DEFERRED_SUBMISSION_FLAG, INVOICE_NUMBER, INVOICE_DATE, CONSIGNOR_EXCISE_NUMBER, CONSIGNOR_NAME, CONSIGNOR_STREET_NAME, CONSIGNOR_STREET_NUMBER, CONSIGNOR_POSTCODE, CONSIGNOR_CITY, CONSIGNOR_LANG_CODE, PLACEOFDISPATCH_EXCISE_NUMBER, PLACEOFDISPATCH_NAME, PLACEOFDISPATCH_STREET_NAME, PLACEOFDISPATCH_STREET_NUMBER, PLACEOFDISPATCH_POSTCODE, PLACEOFDISPATCH_CITY, PLACEOFDISPATCH_LANG_CODE, PLACEOFDISPATCH_OFFICE_REFNUM, PLACEOFDISPATCH_CTR_OFF_REF, IMPORT_CUST_OFFICE_REFNUM, CONSIGNEE_IDENTIFICATION, CONSIGNEE_NAME, CONSIGNEE_STREET_NAME, CONSIGNEE_STREET_NUMBER, CONSIGNEE_POSTCODE, CONSIGNEE_CITY, CONSIGNEE_LANG_CODE, COMPL_CONSIGNEE_COUNTRY_CODE, COMPL_CONSIGNEE_EXEMPTION_CERT, WAS_CONSIGNEE_CHANGED, PLACEOFDELIVERY_IDENTIFICATION, PLACEOFDELIVERY_NAME, PLACEOFDELIVERY_STREET_NAME, PLACEOFDELIVERY_STREET_NUMBER, PLACEOFDELIVERY_POSTCODE, PLACEOFDELIVERY_CITY, PLACEOFDELIVERY_LANG_CODE, PLACEOFDELIVERY_OFFICE_REFNUM, PLACEOFDELIVERY_CTR_OFFICE_REF, GUARANTOR_TYPE_CODE, GUARANTEE_REFERENCE_NUMBER, CONSIGNOR_TIN, GUARANTOR_TIN, GUARANTEE_AMOUNT, GUARANTEE_REMAINING_AMOUNT, GUARANTEE_SHORTAGE_AMOUNT, GUARANTEE_AMOUNT_MANUALLY_REL, GUARANTOR1_EXCISE_NUMBER, GUARANTOR1_NAME, GUARANTOR1_STREET_NAME, GUARANTOR1_STREET_NUMBER, GUARANTOR1_POSTCODE, GUARANTOR1_CITY, GUARANTOR1_VAT_NUMBER, GUARANTOR1_LANG_CODE, GUARANTOR2_EXCISE_NUMBER, GUARANTOR2_NAME, GUARANTOR2_STREET_NAME, GUARANTOR2_STREET_NUMBER, GUARANTOR2_POSTCODE, GUARANTOR2_CITY, GUARANTOR2_VAT_NUMBER, GUARANTOR2_LANG_CODE, TRANSPORT_MODE, TRANSPORT_ARRANGER_VAT_NUMBER, TRANSPORT_ARRANGER_NAME, TRANSPORT_ARRANGER_STREET_NAME, TRANSPORT_ARRANGER_STREET_NUMB, TRANSPORT_ARRANGER_POSTCODE, TRANSPORT_ARRANGER_CITY, TRANSPORT_ARRANGER_LANG_CODE, FIRST_TRANSPORTER_VAT_NUMBER, FIRST_TRANSPORTER_NAME, FIRST_TRANSPORTER_STREET_NAME, FIRST_TRANSPORTER_STREET_NUMB, FIRST_TRANSPORTER_POSTCODE, FIRST_TRANSPORTER_CITY, FIRST_TRANSPORTER_LANG_CODE, WAS_TRANSPORTER_CHANGED, IS_PLACEOFDISPATCH_CONTROLLED, IS_PLACEOFDELIVERY_CONTROLLED, IS_DELIVERY_NOTIFIED, IS_DELAY_SIGNALLED, IS_CONSIGNOR_EXPL_EXPECTED, IS_CONSIGNEE_EXPL_EXPECTED, IS_MOVEMENT_TIME_EXPIRED, IS_AER_DISCREPANCIES_FOUND, UPSTREAM_ARC, ALERT_OR_REJECTION_VALID_DATE, SPLITTING_VALID_DATE, TRANSPORT_MODE_COMPL_INFO, TRANSPORT_MODE_COMPL_INFO_LANG, EXCISE_PRODUCTS_CODES)
		VALUES (src.ID, src.ARC, src.STATUS, src.SEQUENCE_NUMBER, src.LRN, src.MRN, src.IS_PLACEOFDISPATCH_DOMESTIC, src.CONSIGNOR_MSG_RECIPIENT, src.CONSIGNOR_MSG_EMAIL, src.IS_PLACEOFDELIVERY_DOMESTIC, src.CONSIGNEE_MSG_RECIPIENT, src.CONSIGNEE_MSG_EMAIL, src.MOVEMENT_CODE, src.NOTIFICATION_VALIDATION_DATE, src.DRAFT_VALIDATION_DATE, src.EXPORTING_VALID_DATE, src.CANCELATION_VALID_DATE, src.CHANGE_OF_DEST_VALID_DATE, src.REPORT_OF_RECEIPT_VALID_DATE, src.DATE_AND_TIME_OF_DISPATCH, src.IS_TIME_OF_DISPATCH_SET, src.SUBMISSION_TYPE, src.ORIGIN_TYPE_CODE, src.DESTINATION_TYPE_CODE, src.JOURNEY_TIME, src.TRANSPORT_ARRANGEMENT_CODE, src.DEFERRED_SUBMISSION_FLAG, src.INVOICE_NUMBER, src.INVOICE_DATE, src.CONSIGNOR_EXCISE_NUMBER, src.CONSIGNOR_NAME, src.CONSIGNOR_STREET_NAME, src.CONSIGNOR_STREET_NUMBER, src.CONSIGNOR_POSTCODE, src.CONSIGNOR_CITY, src.CONSIGNOR_LANG_CODE, src.PLACEOFDISPATCH_EXCISE_NUMBER, src.PLACEOFDISPATCH_NAME, src.PLACEOFDISPATCH_STREET_NAME, src.PLACEOFDISPATCH_STREET_NUMBER, src.PLACEOFDISPATCH_POSTCODE, src.PLACEOFDISPATCH_CITY, src.PLACEOFDISPATCH_LANG_CODE, src.PLACEOFDISPATCH_OFFICE_REFNUM, src.PLACEOFDISPATCH_CTR_OFF_REF, src.IMPORT_CUST_OFFICE_REFNUM, src.CONSIGNEE_IDENTIFICATION, src.CONSIGNEE_NAME, src.CONSIGNEE_STREET_NAME, src.CONSIGNEE_STREET_NUMBER, src.CONSIGNEE_POSTCODE, src.CONSIGNEE_CITY, src.CONSIGNEE_LANG_CODE, src.COMPL_CONSIGNEE_COUNTRY_CODE, src.COMPL_CONSIGNEE_EXEMPTION_CERT, src.WAS_CONSIGNEE_CHANGED, src.PLACEOFDELIVERY_IDENTIFICATION, src.PLACEOFDELIVERY_NAME, src.PLACEOFDELIVERY_STREET_NAME, src.PLACEOFDELIVERY_STREET_NUMBER, src.PLACEOFDELIVERY_POSTCODE, src.PLACEOFDELIVERY_CITY, src.PLACEOFDELIVERY_LANG_CODE, src.PLACEOFDELIVERY_OFFICE_REFNUM, src.PLACEOFDELIVERY_CTR_OFFICE_REF, src.GUARANTOR_TYPE_CODE, src.GUARANTEE_REFERENCE_NUMBER, src.CONSIGNOR_TIN, src.GUARANTOR_TIN, src.GUARANTEE_AMOUNT, src.GUARANTEE_REMAINING_AMOUNT, src.GUARANTEE_SHORTAGE_AMOUNT, src.GUARANTEE_AMOUNT_MANUALLY_REL, src.GUARANTOR1_EXCISE_NUMBER, src.GUARANTOR1_NAME, src.GUARANTOR1_STREET_NAME, src.GUARANTOR1_STREET_NUMBER, src.GUARANTOR1_POSTCODE, src.GUARANTOR1_CITY, src.GUARANTOR1_VAT_NUMBER, src.GUARANTOR1_LANG_CODE, src.GUARANTOR2_EXCISE_NUMBER, src.GUARANTOR2_NAME, src.GUARANTOR2_STREET_NAME, src.GUARANTOR2_STREET_NUMBER, src.GUARANTOR2_POSTCODE, src.GUARANTOR2_CITY, src.GUARANTOR2_VAT_NUMBER, src.GUARANTOR2_LANG_CODE, src.TRANSPORT_MODE, src.TRANSPORT_ARRANGER_VAT_NUMBER, src.TRANSPORT_ARRANGER_NAME, src.TRANSPORT_ARRANGER_STREET_NAME, src.TRANSPORT_ARRANGER_STREET_NUMB, src.TRANSPORT_ARRANGER_POSTCODE, src.TRANSPORT_ARRANGER_CITY, src.TRANSPORT_ARRANGER_LANG_CODE, src.FIRST_TRANSPORTER_VAT_NUMBER, src.FIRST_TRANSPORTER_NAME, src.FIRST_TRANSPORTER_STREET_NAME, src.FIRST_TRANSPORTER_STREET_NUMB, src.FIRST_TRANSPORTER_POSTCODE, src.FIRST_TRANSPORTER_CITY, src.FIRST_TRANSPORTER_LANG_CODE, src.WAS_TRANSPORTER_CHANGED, src.IS_PLACEOFDISPATCH_CONTROLLED, src.IS_PLACEOFDELIVERY_CONTROLLED, src.IS_DELIVERY_NOTIFIED, src.IS_DELAY_SIGNALLED, src.IS_CONSIGNOR_EXPL_EXPECTED, src.IS_CONSIGNEE_EXPL_EXPECTED, src.IS_MOVEMENT_TIME_EXPIRED, src.IS_AER_DISCREPANCIES_FOUND, src.UPSTREAM_ARC, src.ALERT_OR_REJECTION_VALID_DATE, src.SPLITTING_VALID_DATE, src.TRANSPORT_MODE_COMPL_INFO, src.TRANSPORT_MODE_COMPL_INFO_LANG, src.EXCISE_PRODUCTS_CODES);
				SET @Merged = 1;
	END

	IF @TableName = 'MVMT_CERTIFICATES' BEGIN
		MERGE INTO emcs2.MVMT_CERTIFICATES AS tgt
		USING [WI_StageODS].emcs2.MVMT_CERTIFICATES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.REFERENCE_OF_DOCUMENT=src.REFERENCE_OF_DOCUMENT, tgt.REFERENCE_OF_DOC_LANG_CODE=src.REFERENCE_OF_DOC_LANG_CODE, tgt.DOCUMENT_DESCRIPTION=src.DOCUMENT_DESCRIPTION, tgt.DOCUMENT_DESCRIPTION_LANG_CODE=src.DOCUMENT_DESCRIPTION_LANG_CODE, tgt.MVMT_ID=src.MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, REFERENCE_OF_DOCUMENT, REFERENCE_OF_DOC_LANG_CODE, DOCUMENT_DESCRIPTION, DOCUMENT_DESCRIPTION_LANG_CODE, MVMT_ID)
		VALUES (src.ID, src.REFERENCE_OF_DOCUMENT, src.REFERENCE_OF_DOC_LANG_CODE, src.DOCUMENT_DESCRIPTION, src.DOCUMENT_DESCRIPTION_LANG_CODE, src.MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'MVMT_CONSIGNEE_HISTORY' BEGIN
		MERGE INTO emcs2.MVMT_CONSIGNEE_HISTORY AS tgt
		USING [WI_StageODS].emcs2.MVMT_CONSIGNEE_HISTORY AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.MVMT_ID=src.MVMT_ID, tgt.ARC=src.ARC, tgt.SEQUENCE_NUMBER=src.SEQUENCE_NUMBER, tgt.CONSIGNEE_MSG_RECIPIENT=src.CONSIGNEE_MSG_RECIPIENT, tgt.CONSIGNEE_MSG_EMAIL=src.CONSIGNEE_MSG_EMAIL, tgt.DESTINATION_TYPE_CODE=src.DESTINATION_TYPE_CODE, tgt.IS_PLACEOFDELIVERY_DOMESTIC=src.IS_PLACEOFDELIVERY_DOMESTIC
		WHEN NOT MATCHED
		THEN INSERT (ID, MVMT_ID, ARC, SEQUENCE_NUMBER, CONSIGNEE_MSG_RECIPIENT, CONSIGNEE_MSG_EMAIL, DESTINATION_TYPE_CODE, IS_PLACEOFDELIVERY_DOMESTIC)
		VALUES (src.ID, src.MVMT_ID, src.ARC, src.SEQUENCE_NUMBER, src.CONSIGNEE_MSG_RECIPIENT, src.CONSIGNEE_MSG_EMAIL, src.DESTINATION_TYPE_CODE, src.IS_PLACEOFDELIVERY_DOMESTIC);
		SET @Merged = 1;
	END

	IF @TableName = 'MVMT_DOWNSTREAM_MOVEMENTS' BEGIN
		MERGE INTO emcs2.MVMT_DOWNSTREAM_MOVEMENTS AS tgt
		USING [WI_StageODS].emcs2.MVMT_DOWNSTREAM_MOVEMENTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.MVMT_ID=src.MVMT_ID, tgt.ARC=src.ARC
		WHEN NOT MATCHED
		THEN INSERT (ID, MVMT_ID, ARC)
		VALUES (src.ID, src.MVMT_ID, src.ARC);
		SET @Merged = 1;
	END

	IF @TableName = 'MVMT_INTERESTED_OFFICES' BEGIN
		MERGE INTO emcs2.MVMT_INTERESTED_OFFICES AS tgt
		USING [WI_StageODS].emcs2.MVMT_INTERESTED_OFFICES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.SEQUENCE_NUMBER=src.SEQUENCE_NUMBER, tgt.OFFICE_REFNUM=src.OFFICE_REFNUM, tgt.MVMT_ID=src.MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, SEQUENCE_NUMBER, OFFICE_REFNUM, MVMT_ID)
		VALUES (src.ID, src.SEQUENCE_NUMBER, src.OFFICE_REFNUM, src.MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'MVMT_PACKAGES' BEGIN
		MERGE INTO emcs2.MVMT_PACKAGES AS tgt
		USING [WI_StageODS].emcs2.MVMT_PACKAGES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.KIND_OF_PACKAGES_CODE=src.KIND_OF_PACKAGES_CODE, tgt.NUMBER_OF_PACKAGES=src.NUMBER_OF_PACKAGES, tgt.IDENTITY_OF_COMMERCIAL_SEAL=src.IDENTITY_OF_COMMERCIAL_SEAL, tgt.SEAL_INFORMATION=src.SEAL_INFORMATION, tgt.SEAL_INFORMATION_LANG_CODE=src.SEAL_INFORMATION_LANG_CODE, tgt.MVMT_PRODUCT_ID=src.MVMT_PRODUCT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, KIND_OF_PACKAGES_CODE, NUMBER_OF_PACKAGES, IDENTITY_OF_COMMERCIAL_SEAL, SEAL_INFORMATION, SEAL_INFORMATION_LANG_CODE, MVMT_PRODUCT_ID)
		VALUES (src.ID, src.KIND_OF_PACKAGES_CODE, src.NUMBER_OF_PACKAGES, src.IDENTITY_OF_COMMERCIAL_SEAL, src.SEAL_INFORMATION, src.SEAL_INFORMATION_LANG_CODE, src.MVMT_PRODUCT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'MVMT_PRODUCTS' BEGIN
		MERGE INTO emcs2.MVMT_PRODUCTS AS tgt
		USING [WI_StageODS].emcs2.MVMT_PRODUCTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.RECORD_UNIQUE_REFERENCE=src.RECORD_UNIQUE_REFERENCE, tgt.RECORD_UNIQUE_REFERENCE_TEXT=src.RECORD_UNIQUE_REFERENCE_TEXT, tgt.EXCISE_PRODUCT_CATEGORY=src.EXCISE_PRODUCT_CATEGORY, tgt.EXCISE_PRODUCT_CODE=src.EXCISE_PRODUCT_CODE, tgt.CN_CODE=src.CN_CODE, tgt.QUANTITY=src.QUANTITY, tgt.REMAINING_QUANTITY=src.REMAINING_QUANTITY, tgt.QUANTITY_IN_ADDITIONAL_UNIT=src.QUANTITY_IN_ADDITIONAL_UNIT, tgt.REMAINING_QTY_IN_ADDIT_UNIT=src.REMAINING_QTY_IN_ADDIT_UNIT, tgt.GROSS_WEIGHT=src.GROSS_WEIGHT, tgt.REMAINING_GROSS_WEIGHT=src.REMAINING_GROSS_WEIGHT, tgt.NET_WEIGHT=src.NET_WEIGHT, tgt.REMAINING_NET_WEIGHT=src.REMAINING_NET_WEIGHT, tgt.ALCOHOLIC_STRENGTH=src.ALCOHOLIC_STRENGTH, tgt.DEGREE_PLATO=src.DEGREE_PLATO, tgt.FUEL_TYPE=src.FUEL_TYPE, tgt.NOT_COLORED_AND_MARKED_OILS=src.NOT_COLORED_AND_MARKED_OILS, tgt.BIOFUEL_CONTENT=src.BIOFUEL_CONTENT, tgt.MAX_RETAIL_PRICE=src.MAX_RETAIL_PRICE, tgt.FISCAL_MARK=src.FISCAL_MARK, tgt.FISCAL_MARK_USED_FLAG=src.FISCAL_MARK_USED_FLAG, tgt.DESIGNATION_OF_ORIGIN=src.DESIGNATION_OF_ORIGIN, tgt.SIZE_OF_PRODUCER=src.SIZE_OF_PRODUCER, tgt.DENSITY=src.DENSITY, tgt.COMMERCIAL_DESCRIPTION=src.COMMERCIAL_DESCRIPTION, tgt.BRAND_NAME=src.BRAND_NAME, tgt.WINE_PRODUCT_CATEGORY=src.WINE_PRODUCT_CATEGORY, tgt.WINE_GROWING_ZONE_CODE=src.WINE_GROWING_ZONE_CODE, tgt.WINE_THIRD_COUNTRY_OF_ORIGIN=src.WINE_THIRD_COUNTRY_OF_ORIGIN, tgt.WINE_OTHER_INFORMATION=src.WINE_OTHER_INFORMATION, tgt.FISCAL_MARK_LANG_CODE=src.FISCAL_MARK_LANG_CODE, tgt.DESIGNATION_OF_ORIG_LANG_CODE=src.DESIGNATION_OF_ORIG_LANG_CODE, tgt.COMMERCIAL_DESC_LANG_CODE=src.COMMERCIAL_DESC_LANG_CODE, tgt.BRAND_NAME_LANG_CODE=src.BRAND_NAME_LANG_CODE, tgt.WINE_OTHER_INFO_LANG_CODE=src.WINE_OTHER_INFO_LANG_CODE, tgt.IS_SHORTAGE_OR_EXCESS=src.IS_SHORTAGE_OR_EXCESS, tgt.OBSERVED_SHORTAGE_OR_EXCESS=src.OBSERVED_SHORTAGE_OR_EXCESS, tgt.GUARANTEE_AMOUNT=src.GUARANTEE_AMOUNT, tgt.GUARANTEE_REMAINING_AMOUNT=src.GUARANTEE_REMAINING_AMOUNT, tgt.GUARANTEE_SHORTAGE_AMOUNT=src.GUARANTEE_SHORTAGE_AMOUNT, tgt.DELIVERED=src.DELIVERED, tgt.AER_ITEM_NUMBER=src.AER_ITEM_NUMBER, tgt.AER_SHORTAGE_OR_EXCESS=src.AER_SHORTAGE_OR_EXCESS, tgt.MVMT_ID=src.MVMT_ID, tgt.BIOFUEL_CONTENT_QUALITY=src.BIOFUEL_CONTENT_QUALITY
		WHEN NOT MATCHED
		THEN INSERT (ID, RECORD_UNIQUE_REFERENCE, RECORD_UNIQUE_REFERENCE_TEXT, EXCISE_PRODUCT_CATEGORY, EXCISE_PRODUCT_CODE, CN_CODE, QUANTITY, REMAINING_QUANTITY, QUANTITY_IN_ADDITIONAL_UNIT, REMAINING_QTY_IN_ADDIT_UNIT, GROSS_WEIGHT, REMAINING_GROSS_WEIGHT, NET_WEIGHT, REMAINING_NET_WEIGHT, ALCOHOLIC_STRENGTH, DEGREE_PLATO, FUEL_TYPE, NOT_COLORED_AND_MARKED_OILS, BIOFUEL_CONTENT, MAX_RETAIL_PRICE, FISCAL_MARK, FISCAL_MARK_USED_FLAG, DESIGNATION_OF_ORIGIN, SIZE_OF_PRODUCER, DENSITY, COMMERCIAL_DESCRIPTION, BRAND_NAME, WINE_PRODUCT_CATEGORY, WINE_GROWING_ZONE_CODE, WINE_THIRD_COUNTRY_OF_ORIGIN, WINE_OTHER_INFORMATION, FISCAL_MARK_LANG_CODE, DESIGNATION_OF_ORIG_LANG_CODE, COMMERCIAL_DESC_LANG_CODE, BRAND_NAME_LANG_CODE, WINE_OTHER_INFO_LANG_CODE, IS_SHORTAGE_OR_EXCESS, OBSERVED_SHORTAGE_OR_EXCESS, GUARANTEE_AMOUNT, GUARANTEE_REMAINING_AMOUNT, GUARANTEE_SHORTAGE_AMOUNT, DELIVERED, AER_ITEM_NUMBER, AER_SHORTAGE_OR_EXCESS, MVMT_ID, BIOFUEL_CONTENT_QUALITY)
		VALUES (src.ID, src.RECORD_UNIQUE_REFERENCE, src.RECORD_UNIQUE_REFERENCE_TEXT, src.EXCISE_PRODUCT_CATEGORY, src.EXCISE_PRODUCT_CODE, src.CN_CODE, src.QUANTITY, src.REMAINING_QUANTITY, src.QUANTITY_IN_ADDITIONAL_UNIT, src.REMAINING_QTY_IN_ADDIT_UNIT, src.GROSS_WEIGHT, src.REMAINING_GROSS_WEIGHT, src.NET_WEIGHT, src.REMAINING_NET_WEIGHT, src.ALCOHOLIC_STRENGTH, src.DEGREE_PLATO, src.FUEL_TYPE, src.NOT_COLORED_AND_MARKED_OILS, src.BIOFUEL_CONTENT, src.MAX_RETAIL_PRICE, src.FISCAL_MARK, src.FISCAL_MARK_USED_FLAG, src.DESIGNATION_OF_ORIGIN, src.SIZE_OF_PRODUCER, src.DENSITY, src.COMMERCIAL_DESCRIPTION, src.BRAND_NAME, src.WINE_PRODUCT_CATEGORY, src.WINE_GROWING_ZONE_CODE, src.WINE_THIRD_COUNTRY_OF_ORIGIN, src.WINE_OTHER_INFORMATION, src.FISCAL_MARK_LANG_CODE, src.DESIGNATION_OF_ORIG_LANG_CODE, src.COMMERCIAL_DESC_LANG_CODE, src.BRAND_NAME_LANG_CODE, src.WINE_OTHER_INFO_LANG_CODE, src.IS_SHORTAGE_OR_EXCESS, src.OBSERVED_SHORTAGE_OR_EXCESS, src.GUARANTEE_AMOUNT, src.GUARANTEE_REMAINING_AMOUNT, src.GUARANTEE_SHORTAGE_AMOUNT, src.DELIVERED, src.AER_ITEM_NUMBER, src.AER_SHORTAGE_OR_EXCESS, src.MVMT_ID, src.BIOFUEL_CONTENT_QUALITY);
		SET @Merged = 1;
	END

	IF @TableName = 'MVMT_SAD_DOCUMENTS' BEGIN
		MERGE INTO emcs2.MVMT_SAD_DOCUMENTS AS tgt
		USING [WI_StageODS].emcs2.MVMT_SAD_DOCUMENTS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.SAD_NUMBER=src.SAD_NUMBER, tgt.MVMT_ID=src.MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, SAD_NUMBER, MVMT_ID)
		VALUES (src.ID, src.SAD_NUMBER, src.MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'MVMT_TRANSPORT_DETAILS' BEGIN
		MERGE INTO emcs2.MVMT_TRANSPORT_DETAILS AS tgt
		USING [WI_StageODS].emcs2.MVMT_TRANSPORT_DETAILS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.TRANSPORT_UNIT_CODE=src.TRANSPORT_UNIT_CODE, tgt.IDENTITY_OF_TRANSPORT_UNIT=src.IDENTITY_OF_TRANSPORT_UNIT, tgt.IDENTITY_OF_COMMERCIAL_SEAL=src.IDENTITY_OF_COMMERCIAL_SEAL, tgt.SEAL_INFORMATION=src.SEAL_INFORMATION, tgt.SEAL_INFORMATION_LANG_CODE=src.SEAL_INFORMATION_LANG_CODE, tgt.COMPLEMENTARY_INFORMATION=src.COMPLEMENTARY_INFORMATION, tgt.COMPLEMENTARY_INFO_LANG_CODE=src.COMPLEMENTARY_INFO_LANG_CODE, tgt.MVMT_ID=src.MVMT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, TRANSPORT_UNIT_CODE, IDENTITY_OF_TRANSPORT_UNIT, IDENTITY_OF_COMMERCIAL_SEAL, SEAL_INFORMATION, SEAL_INFORMATION_LANG_CODE, COMPLEMENTARY_INFORMATION, COMPLEMENTARY_INFO_LANG_CODE, MVMT_ID)
		VALUES (src.ID, src.TRANSPORT_UNIT_CODE, src.IDENTITY_OF_TRANSPORT_UNIT, src.IDENTITY_OF_COMMERCIAL_SEAL, src.SEAL_INFORMATION, src.SEAL_INFORMATION_LANG_CODE, src.COMPLEMENTARY_INFORMATION, src.COMPLEMENTARY_INFO_LANG_CODE, src.MVMT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'MVMT_WINE_OPERATION_CODES' BEGIN
		MERGE INTO emcs2.MVMT_WINE_OPERATION_CODES AS tgt
		USING [WI_StageODS].emcs2.MVMT_WINE_OPERATION_CODES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.WINE_OPERATION_CODE=src.WINE_OPERATION_CODE, tgt.MVMT_PRODUCT_ID=src.MVMT_PRODUCT_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, WINE_OPERATION_CODE, MVMT_PRODUCT_ID)
		VALUES (src.ID, src.WINE_OPERATION_CODE, src.MVMT_PRODUCT_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'PACKAGING_CODES' BEGIN
		MERGE INTO emcs2.PACKAGING_CODES AS tgt
		USING [WI_StageODS].emcs2.PACKAGING_CODES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.CODE=src.CODE, tgt.DESCRIPTION=src.DESCRIPTION, tgt.DESCRIPTION_LANG_CODE=src.DESCRIPTION_LANG_CODE, tgt.COUNTABLE=src.COUNTABLE, tgt.VALID_FROM=src.VALID_FROM, tgt.VALID_TO=src.VALID_TO, tgt.ACTION_IDENTIFIER=src.ACTION_IDENTIFIER, tgt.INVALIDATE_ACTION_IDENTIFIER=src.INVALIDATE_ACTION_IDENTIFIER, tgt.SEED_CODE=src.SEED_CODE
		WHEN NOT MATCHED
		THEN INSERT (ID, CODE, DESCRIPTION, DESCRIPTION_LANG_CODE, COUNTABLE, VALID_FROM, VALID_TO, ACTION_IDENTIFIER, INVALIDATE_ACTION_IDENTIFIER, SEED_CODE)
		VALUES (src.ID, src.CODE, src.DESCRIPTION, src.DESCRIPTION_LANG_CODE, src.COUNTABLE, src.VALID_FROM, src.VALID_TO, src.ACTION_IDENTIFIER, src.INVALIDATE_ACTION_IDENTIFIER, src.SEED_CODE);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_MIEJSCA_ODBIORU' BEGIN
		MERGE INTO emcs2.REF_SD2_MIEJSCA_ODBIORU AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_MIEJSCA_ODBIORU AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.REF_SD2_PODMIOTY_NRA=src.REF_SD2_PODMIOTY_NRA, tgt.NAZWA=src.NAZWA, tgt.NR_AKCYZOWY=src.NR_AKCYZOWY, tgt.UC_KONTROLI=src.UC_KONTROLI, tgt.KOD_KRAJU=src.KOD_KRAJU, tgt.ULICA=src.ULICA, tgt.NR_DOMU=src.NR_DOMU, tgt.NR_LOKALU=src.NR_LOKALU, tgt.MIEJSCOWOSC=src.MIEJSCOWOSC, tgt.KOD_POCZTOWY=src.KOD_POCZTOWY, tgt.POCZTA=src.POCZTA, tgt.REF_SD2_PODMIOTY_TYP=src.REF_SD2_PODMIOTY_TYP
		WHEN NOT MATCHED
		THEN INSERT (ID, REF_SD2_PODMIOTY_NRA, NAZWA, NR_AKCYZOWY, UC_KONTROLI, KOD_KRAJU, ULICA, NR_DOMU, NR_LOKALU, MIEJSCOWOSC, KOD_POCZTOWY, POCZTA, REF_SD2_PODMIOTY_TYP)
		VALUES (src.ID, src.REF_SD2_PODMIOTY_NRA, src.NAZWA, src.NR_AKCYZOWY, src.UC_KONTROLI, src.KOD_KRAJU, src.ULICA, src.NR_DOMU, src.NR_LOKALU, src.MIEJSCOWOSC, src.KOD_POCZTOWY, src.POCZTA, src.REF_SD2_PODMIOTY_TYP);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_PODMIOTY' BEGIN
		MERGE INTO emcs2.REF_SD2_PODMIOTY AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_PODMIOTY AS src
		ON (tgt.NRA=src.NRA AND tgt.TYP=src.TYP)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.NRA=src.NRA, tgt.TYP=src.TYP, tgt.NAZWA=src.NAZWA, tgt.NIP=src.NIP, tgt.REGON=src.REGON, tgt.KOD_KRAJU=src.KOD_KRAJU, tgt.ULICA=src.ULICA, tgt.NR_DOMU=src.NR_DOMU, tgt.NR_LOKALU=src.NR_LOKALU, tgt.MIEJSCOWOSC=src.MIEJSCOWOSC, tgt.KOD_POCZTOWY=src.KOD_POCZTOWY, tgt.POCZTA=src.POCZTA, tgt.UC_NADZORU=src.UC_NADZORU, tgt.OBOWIAZUJE_OD=src.OBOWIAZUJE_OD, tgt.OBOWIAZUJE_DO=src.OBOWIAZUJE_DO, tgt.WYSYLAJACY=src.WYSYLAJACY, tgt.INT_DOMYSLNY=src.INT_DOMYSLNY, tgt.INT_PODSTAWOWY_EMAIL=src.INT_PODSTAWOWY_EMAIL, tgt.INT_EMAIL=src.INT_EMAIL, tgt.INT_WS_LOGIN=src.INT_WS_LOGIN, tgt.INT_WS_HASLO=src.INT_WS_HASLO, tgt.INT_WS_ADRES=src.INT_WS_ADRES, tgt.UC_WYDANIA=src.UC_WYDANIA, tgt.INT_WS_EMCS_HASLO=src.INT_WS_EMCS_HASLO, tgt.INT_WS_X509_THUMBPRINT=src.INT_WS_X509_THUMBPRINT, tgt.CZY_DOSTAWA_BEZPOSREDNIA=src.CZY_DOSTAWA_BEZPOSREDNIA, tgt.WLASCICIEL=src.WLASCICIEL, tgt.ID_SISC=src.ID_SISC
		WHEN NOT MATCHED
		THEN INSERT (NRA, TYP, NAZWA, NIP, REGON, KOD_KRAJU, ULICA, NR_DOMU, NR_LOKALU, MIEJSCOWOSC, KOD_POCZTOWY, POCZTA, UC_NADZORU, OBOWIAZUJE_OD, OBOWIAZUJE_DO, WYSYLAJACY, INT_DOMYSLNY, INT_PODSTAWOWY_EMAIL, INT_EMAIL, INT_WS_LOGIN, INT_WS_HASLO, INT_WS_ADRES, UC_WYDANIA, INT_WS_EMCS_HASLO, INT_WS_X509_THUMBPRINT, CZY_DOSTAWA_BEZPOSREDNIA, WLASCICIEL, ID_SISC)
		VALUES (src.NRA, src.TYP, src.NAZWA, src.NIP, src.REGON, src.KOD_KRAJU, src.ULICA, src.NR_DOMU, src.NR_LOKALU, src.MIEJSCOWOSC, src.KOD_POCZTOWY, src.POCZTA, src.UC_NADZORU, src.OBOWIAZUJE_OD, src.OBOWIAZUJE_DO, src.WYSYLAJACY, src.INT_DOMYSLNY, src.INT_PODSTAWOWY_EMAIL, src.INT_EMAIL, src.INT_WS_LOGIN, src.INT_WS_HASLO, src.INT_WS_ADRES, src.UC_WYDANIA, src.INT_WS_EMCS_HASLO, src.INT_WS_X509_THUMBPRINT, src.CZY_DOSTAWA_BEZPOSREDNIA, src.WLASCICIEL, src.ID_SISC);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_PRZEDSTAWICIELE' BEGIN
		MERGE INTO emcs2.REF_SD2_PRZEDSTAWICIELE AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_PRZEDSTAWICIELE AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.REF_SD2_PODMIOTY_NRA=src.REF_SD2_PODMIOTY_NRA, tgt.IMIE=src.IMIE, tgt.NAZWISKO=src.NAZWISKO, tgt.PESEL=src.PESEL, tgt.X509_THUMBPRINT=src.X509_THUMBPRINT, tgt.REF_SD2_PODMIOTY_TYP=src.REF_SD2_PODMIOTY_TYP
		WHEN NOT MATCHED
		THEN INSERT (ID, REF_SD2_PODMIOTY_NRA, IMIE, NAZWISKO, PESEL, X509_THUMBPRINT, REF_SD2_PODMIOTY_TYP)
		VALUES (src.ID, src.REF_SD2_PODMIOTY_NRA, src.IMIE, src.NAZWISKO, src.PESEL, src.X509_THUMBPRINT, src.REF_SD2_PODMIOTY_TYP);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_UBYTKI_TRANS' BEGIN
		MERGE INTO emcs2.REF_SD2_UBYTKI_TRANS AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_UBYTKI_TRANS AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.REF_SD2_PODMIOTY_NRA=src.REF_SD2_PODMIOTY_NRA, tgt.REF_SD2_PODMIOTY_TYP=src.REF_SD2_PODMIOTY_TYP, tgt.KOD=src.KOD, tgt.NORMA=src.NORMA, tgt.SPOSOB_WYLICZENIA=src.SPOSOB_WYLICZENIA, tgt.OBOWIAZUJE_OD=src.OBOWIAZUJE_OD, tgt.OBOWIAZUJE_DO=src.OBOWIAZUJE_DO
		WHEN NOT MATCHED
		THEN INSERT (ID, REF_SD2_PODMIOTY_NRA, REF_SD2_PODMIOTY_TYP, KOD, NORMA, SPOSOB_WYLICZENIA, OBOWIAZUJE_OD, OBOWIAZUJE_DO)
		VALUES (src.ID, src.REF_SD2_PODMIOTY_NRA, src.REF_SD2_PODMIOTY_TYP, src.KOD, src.NORMA, src.SPOSOB_WYLICZENIA, src.OBOWIAZUJE_OD, src.OBOWIAZUJE_DO);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_UBYTKI_TRANS_KODY_CN' BEGIN
		MERGE INTO emcs2.REF_SD2_UBYTKI_TRANS_KODY_CN AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_UBYTKI_TRANS_KODY_CN AS src
		ON (tgt.UBT_ID=src.UBT_ID AND tgt.KOD_CN=src.KOD_CN)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.UBT_ID=src.UBT_ID, tgt.KOD_CN=src.KOD_CN
		WHEN NOT MATCHED
		THEN INSERT (UBT_ID, KOD_CN)
		VALUES (src.UBT_ID, src.KOD_CN);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_UBYTKI_TRANS_OPAK' BEGIN
		MERGE INTO emcs2.REF_SD2_UBYTKI_TRANS_OPAK AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_UBYTKI_TRANS_OPAK AS src
		ON (tgt.UBT_ID=src.UBT_ID AND tgt.GRUPA=src.GRUPA)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.UBT_ID=src.UBT_ID, tgt.GRUPA=src.GRUPA
		WHEN NOT MATCHED
		THEN INSERT (UBT_ID, GRUPA)
		VALUES (src.UBT_ID, src.GRUPA);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_UBYTKI_TRANS_SRODKI' BEGIN
		MERGE INTO emcs2.REF_SD2_UBYTKI_TRANS_SRODKI AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_UBYTKI_TRANS_SRODKI AS src
		ON (tgt.UBT_ID=src.UBT_ID AND tgt.RODZAJ=src.RODZAJ)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.UBT_ID=src.UBT_ID, tgt.RODZAJ=src.RODZAJ
		WHEN NOT MATCHED
		THEN INSERT (UBT_ID, RODZAJ)
		VALUES (src.UBT_ID, src.RODZAJ);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_WLASCICIELE' BEGIN
		MERGE INTO emcs2.REF_SD2_WLASCICIELE AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_WLASCICIELE AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.NRA=src.NRA, tgt.TYP=src.TYP, tgt.WLASCICIEL_NRA=src.WLASCICIEL_NRA, tgt.WLASCICIEL_TYP=src.WLASCICIEL_TYP
		WHEN NOT MATCHED
		THEN INSERT (ID, NRA, TYP, WLASCICIEL_NRA, WLASCICIEL_TYP)
		VALUES (src.ID, src.NRA, src.TYP, src.WLASCICIEL_NRA, src.WLASCICIEL_TYP);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_WYROBY' BEGIN
		MERGE INTO emcs2.REF_SD2_WYROBY AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_WYROBY AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.REF_SD2_PODMIOTY_NRA=src.REF_SD2_PODMIOTY_NRA, tgt.KATEGORIA=src.KATEGORIA, tgt.KOD=src.KOD, tgt.ILOSC=src.ILOSC, tgt.JEDNOSTKA=src.JEDNOSTKA, tgt.REF_SD2_PODMIOTY_TYP=src.REF_SD2_PODMIOTY_TYP
		WHEN NOT MATCHED
		THEN INSERT (ID, REF_SD2_PODMIOTY_NRA, KATEGORIA, KOD, ILOSC, JEDNOSTKA, REF_SD2_PODMIOTY_TYP)
		VALUES (src.ID, src.REF_SD2_PODMIOTY_NRA, src.KATEGORIA, src.KOD, src.ILOSC, src.JEDNOSTKA, src.REF_SD2_PODMIOTY_TYP);
		SET @Merged = 1;
	END

	IF @TableName = 'REF_SD2_ZABEZPIECZENIA' BEGIN
		MERGE INTO emcs2.REF_SD2_ZABEZPIECZENIA AS tgt
		USING [WI_StageODS].emcs2.REF_SD2_ZABEZPIECZENIA AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.REF_SD2_PODMIOTY_NRA=src.REF_SD2_PODMIOTY_NRA, tgt.NR_GRN=src.NR_GRN, tgt.OBOWIAZUJE_OD=src.OBOWIAZUJE_OD, tgt.OBOWIAZUJE_DO=src.OBOWIAZUJE_DO, tgt.REF_SD2_PODMIOTY_TYP=src.REF_SD2_PODMIOTY_TYP
		WHEN NOT MATCHED
		THEN INSERT (ID, REF_SD2_PODMIOTY_NRA, NR_GRN, OBOWIAZUJE_OD, OBOWIAZUJE_DO, REF_SD2_PODMIOTY_TYP)
		VALUES (src.ID, src.REF_SD2_PODMIOTY_NRA, src.NR_GRN, src.OBOWIAZUJE_OD, src.OBOWIAZUJE_DO, src.REF_SD2_PODMIOTY_TYP);
		SET @Merged = 1;
	END

	IF @TableName = 'REQUEST_MESSAGES' BEGIN
		MERGE INTO emcs2.REQUEST_MESSAGES AS tgt
		USING [WI_StageODS].emcs2.REQUEST_MESSAGES AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.TYPE=src.TYPE, tgt.OFFICE_REFERENCE_NUMBER=src.OFFICE_REFERENCE_NUMBER, tgt.REQUEST_MESSAGE_ID=src.REQUEST_MESSAGE_ID, tgt.ARC=src.ARC, tgt.SEQUENCE_NUMBER=src.SEQUENCE_NUMBER, tgt.REQUEST_STATUS=src.REQUEST_STATUS, tgt.REQUEST_LAST_MESSAGE_TYPE=src.REQUEST_LAST_MESSAGE_TYPE, tgt.RESPONSE_MESSAGE_ID=src.RESPONSE_MESSAGE_ID, tgt.RESPONSE_STATUS=src.RESPONSE_STATUS, tgt.RESPONSE_LAST_MESSAGE_TYPE=src.RESPONSE_LAST_MESSAGE_TYPE, tgt.RESULT_MESSAGE_ID=src.RESULT_MESSAGE_ID
		WHEN NOT MATCHED
		THEN INSERT (ID, TYPE, OFFICE_REFERENCE_NUMBER, REQUEST_MESSAGE_ID, ARC, SEQUENCE_NUMBER, REQUEST_STATUS, REQUEST_LAST_MESSAGE_TYPE, RESPONSE_MESSAGE_ID, RESPONSE_STATUS, RESPONSE_LAST_MESSAGE_TYPE, RESULT_MESSAGE_ID)
		VALUES (src.ID, src.TYPE, src.OFFICE_REFERENCE_NUMBER, src.REQUEST_MESSAGE_ID, src.ARC, src.SEQUENCE_NUMBER, src.REQUEST_STATUS, src.REQUEST_LAST_MESSAGE_TYPE, src.RESPONSE_MESSAGE_ID, src.RESPONSE_STATUS, src.RESPONSE_LAST_MESSAGE_TYPE, src.RESULT_MESSAGE_ID);
		SET @Merged = 1;
	END

	IF @TableName = 'TFILE' BEGIN
		MERGE INTO emcs2.TFILE AS tgt
		USING [WI_StageODS].emcs2.TFILE AS src
		ON (tgt.ID=src.ID)
		WHEN MATCHED
		THEN UPDATE SET
		tgt.ID=src.ID, tgt.CONTENTOBJECTID=src.CONTENTOBJECTID, tgt.FILESIZEBYTES=src.FILESIZEBYTES, tgt.FILENAME=src.FILENAME, tgt.FILEEXTENSION=src.FILEEXTENSION, tgt.PRIMARYEDITORID=src.PRIMARYEDITORID, tgt.CHECKSUM=src.CHECKSUM, tgt.CREATEDON=src.CREATEDON, tgt.CREATEDBYID=src.CREATEDBYID, tgt.ORIGINPATH=src.ORIGINPATH, tgt.CONTENT=src.CONTENT, tgt.COMPRESSIONALGORITHM=src.COMPRESSIONALGORITHM
		WHEN NOT MATCHED
		THEN INSERT (ID, CONTENTOBJECTID, FILESIZEBYTES, FILENAME, FILEEXTENSION, PRIMARYEDITORID, CHECKSUM, CREATEDON, CREATEDBYID, ORIGINPATH, CONTENT, COMPRESSIONALGORITHM)
		VALUES (src.ID, src.CONTENTOBJECTID, src.FILESIZEBYTES, src.FILENAME, src.FILEEXTENSION, src.PRIMARYEDITORID, src.CHECKSUM, src.CREATEDON, src.CREATEDBYID, src.ORIGINPATH, src.CONTENT, src.COMPRESSIONALGORITHM);
		SET @Merged = 1;
	END


	IF (@Merged = 0)
	BEGIN
			DECLARE @Info VARCHAR(500) = 'W procedurze nie znaleziono bloku odpowiadającego tabeli [' + @TableName + '] z parametru @TableName.';
			THROW 51002, @Info, 0;
				END
			END
		;